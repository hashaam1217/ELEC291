0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Wed Feb 28 12:33:58 2024
0000              5   ;--------------------------------------------------------
                  5   $name lcd_test
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _LCD_puts
0000             28            public _LCD_data
0000             29            public _LCD_command
0000             30            public _Wait40us
0000             31            public _de2_8052_crt0
0000             32   ;--------------------------------------------------------
0000             33   ; Special Function Registers
0000             34   ;--------------------------------------------------------
0000             35   _P0             DATA 0x80
0000             36   _SP             DATA 0x81
0000             37   _DPL            DATA 0x82
0000             38   _DPH            DATA 0x83
0000             39   _PCON           DATA 0x87
0000             40   _TCON           DATA 0x88
0000             41   _TMOD           DATA 0x89
0000             42   _TL0            DATA 0x8a
0000             43   _TL1            DATA 0x8b
0000             44   _TH0            DATA 0x8c
0000             45   _TH1            DATA 0x8d
0000             46   _P1             DATA 0x90
0000             47   _SCON           DATA 0x98
0000             48   _SBUF           DATA 0x99
0000             49   _P2             DATA 0xa0
0000             50   _IE             DATA 0xa8
0000             51   _P3             DATA 0xb0
0000             52   _IP             DATA 0xb8
0000             53   _PSW            DATA 0xd0
0000             54   _ACC            DATA 0xe0
0000             55   _B              DATA 0xf0
0000             56   _T2CON          DATA 0xc8
0000             57   _RCAP2L         DATA 0xca
0000             58   _RCAP2H         DATA 0xcb
0000             59   _TL2            DATA 0xcc
0000             60   _TH2            DATA 0xcd
0000             61   _DPS            DATA 0x86
0000             62   _DPH1           DATA 0x85
0000             63   _DPL1           DATA 0x84
0000             64   _HEX0           DATA 0x91
0000             65   _HEX1           DATA 0x92
0000             66   _HEX2           DATA 0x93
0000             67   _HEX3           DATA 0x94
0000             68   _HEX4           DATA 0x8e
0000             69   _HEX5           DATA 0x8f
0000             70   _HEX6           DATA 0x96
0000             71   _HEX7           DATA 0x97
0000             72   _LEDRA          DATA 0xe8
0000             73   _LEDRB          DATA 0x95
0000             74   _LEDRC          DATA 0x9e
0000             75   _LEDG           DATA 0xf8
0000             76   _SWA            DATA 0xe8
0000             77   _SWB            DATA 0x95
0000             78   _SWC            DATA 0x9e
0000             79   _KEY            DATA 0xf8
0000             80   _P0MOD          DATA 0x9a
0000             81   _P1MOD          DATA 0x9b
0000             82   _P2MOD          DATA 0x9c
0000             83   _P3MOD          DATA 0x9d
0000             84   _LCD_CMD        DATA 0xd8
0000             85   _LCD_DATA       DATA 0xd9
0000             86   _LCD_MOD        DATA 0xda
0000             87   _JCMD           DATA 0xc0
0000             88   _JBUF           DATA 0xc1
0000             89   _JCNT           DATA 0xc2
0000             90   _REP_ADD_L      DATA 0xf1
0000             91   _REP_ADD_H      DATA 0xf2
0000             92   _REP_VALUE      DATA 0xf3
0000             93   _DEBUG_CALL_L   DATA 0xfa
0000             94   _DEBUG_CALL_H   DATA 0xfb
0000             95   _BPC            DATA 0xfc
0000             96   _BPS            DATA 0xfd
0000             97   _BPAL           DATA 0xfe
0000             98   _BPAH           DATA 0xff
0000             99   _LBPAL          DATA 0xfa
0000            100   _LBPAH          DATA 0xfb
0000            101   _XRAMUSEDAS     DATA 0xc3
0000            102   _FLASH_CMD      DATA 0xdb
0000            103   _FLASH_DATA     DATA 0xdc
0000            104   _FLASH_MOD      DATA 0xdd
0000            105   _FLASH_ADD0     DATA 0xe1
0000            106   _FLASH_ADD1     DATA 0xe2
0000            107   _FLASH_ADD2     DATA 0xe3
0000            108   ;--------------------------------------------------------
0000            109   ; special function bits
0000            110   ;--------------------------------------------------------
0000            111   _P0_0           BIT 0x80
0000            112   _P0_1           BIT 0x81
0000            113   _P0_2           BIT 0x82
0000            114   _P0_3           BIT 0x83
0000            115   _P0_4           BIT 0x84
0000            116   _P0_5           BIT 0x85
0000            117   _P0_6           BIT 0x86
0000            118   _P0_7           BIT 0x87
0000            119   _IT0            BIT 0x88
0000            120   _IE0            BIT 0x89
0000            121   _IT1            BIT 0x8a
0000            122   _IE1            BIT 0x8b
0000            123   _TR0            BIT 0x8c
0000            124   _TF0            BIT 0x8d
0000            125   _TR1            BIT 0x8e
0000            126   _TF1            BIT 0x8f
0000            127   _P1_0           BIT 0x90
0000            128   _P1_1           BIT 0x91
0000            129   _P1_2           BIT 0x92
0000            130   _P1_3           BIT 0x93
0000            131   _P1_4           BIT 0x94
0000            132   _P1_5           BIT 0x95
0000            133   _P1_6           BIT 0x96
0000            134   _P1_7           BIT 0x97
0000            135   _RI             BIT 0x98
0000            136   _TI             BIT 0x99
0000            137   _RB8            BIT 0x9a
0000            138   _TB8            BIT 0x9b
0000            139   _REN            BIT 0x9c
0000            140   _SM2            BIT 0x9d
0000            141   _SM1            BIT 0x9e
0000            142   _SM0            BIT 0x9f
0000            143   _P2_0           BIT 0xa0
0000            144   _P2_1           BIT 0xa1
0000            145   _P2_2           BIT 0xa2
0000            146   _P2_3           BIT 0xa3
0000            147   _P2_4           BIT 0xa4
0000            148   _P2_5           BIT 0xa5
0000            149   _P2_6           BIT 0xa6
0000            150   _P2_7           BIT 0xa7
0000            151   _EX0            BIT 0xa8
0000            152   _ET0            BIT 0xa9
0000            153   _EX1            BIT 0xaa
0000            154   _ET1            BIT 0xab
0000            155   _ES             BIT 0xac
0000            156   _ET2            BIT 0xad
0000            157   _EA             BIT 0xaf
0000            158   _P3_0           BIT 0xb0
0000            159   _P3_1           BIT 0xb1
0000            160   _P3_2           BIT 0xb2
0000            161   _P3_3           BIT 0xb3
0000            162   _P3_4           BIT 0xb4
0000            163   _P3_5           BIT 0xb5
0000            164   _P3_6           BIT 0xb6
0000            165   _P3_7           BIT 0xb7
0000            166   _RXD            BIT 0xb0
0000            167   _TXD            BIT 0xb1
0000            168   _INT0           BIT 0xb2
0000            169   _INT1           BIT 0xb3
0000            170   _T0             BIT 0xb4
0000            171   _T1             BIT 0xb5
0000            172   _WR             BIT 0xb6
0000            173   _RD             BIT 0xb7
0000            174   _PX0            BIT 0xb8
0000            175   _PT0            BIT 0xb9
0000            176   _PX1            BIT 0xba
0000            177   _PT1            BIT 0xbb
0000            178   _PS             BIT 0xbc
0000            179   _PT2            BIT 0xbd
0000            180   _P              BIT 0xd0
0000            181   _F1             BIT 0xd1
0000            182   _OV             BIT 0xd2
0000            183   _RS0            BIT 0xd3
0000            184   _RS1            BIT 0xd4
0000            185   _F0             BIT 0xd5
0000            186   _AC             BIT 0xd6
0000            187   _CY             BIT 0xd7
0000            188   _T2CON_0        BIT 0xc8
0000            189   _T2CON_1        BIT 0xc9
0000            190   _T2CON_2        BIT 0xca
0000            191   _T2CON_3        BIT 0xcb
0000            192   _T2CON_4        BIT 0xcc
0000            193   _T2CON_5        BIT 0xcd
0000            194   _T2CON_6        BIT 0xce
0000            195   _T2CON_7        BIT 0xcf
0000            196   _CP_RL2         BIT 0xc8
0000            197   _C_T2           BIT 0xc9
0000            198   _TR2            BIT 0xca
0000            199   _EXEN2          BIT 0xcb
0000            200   _TCLK           BIT 0xcc
0000            201   _RCLK           BIT 0xcd
0000            202   _EXF2           BIT 0xce
0000            203   _TF2            BIT 0xcf
0000            204   _LEDRA_0        BIT 0xe8
0000            205   _LEDRA_1        BIT 0xe9
0000            206   _LEDRA_2        BIT 0xea
0000            207   _LEDRA_3        BIT 0xeb
0000            208   _LEDRA_4        BIT 0xec
0000            209   _LEDRA_5        BIT 0xed
0000            210   _LEDRA_6        BIT 0xee
0000            211   _LEDRA_7        BIT 0xef
0000            212   _SWA_0          BIT 0xe8
0000            213   _SWA_1          BIT 0xe9
0000            214   _SWA_2          BIT 0xea
0000            215   _SWA_3          BIT 0xeb
0000            216   _SWA_4          BIT 0xec
0000            217   _SWA_5          BIT 0xed
0000            218   _SWA_6          BIT 0xee
0000            219   _SWA_7          BIT 0xef
0000            220   _LEDG_0         BIT 0xf8
0000            221   _LEDG_1         BIT 0xf9
0000            222   _LEDG_2         BIT 0xfa
0000            223   _LEDG_3         BIT 0xfb
0000            224   _LEDG_4         BIT 0xfc
0000            225   _LEDG_5         BIT 0xfd
0000            226   _LEDG_6         BIT 0xfe
0000            227   _LEDG_7         BIT 0xff
0000            228   _KEY_1          BIT 0xf9
0000            229   _KEY_2          BIT 0xfa
0000            230   _KEY_3          BIT 0xfb
0000            231   _LCD_RW         BIT 0xd8
0000            232   _LCD_EN         BIT 0xd9
0000            233   _LCD_RS         BIT 0xda
0000            234   _LCD_ON         BIT 0xdb
0000            235   _LCD_BLON       BIT 0xdc
0000            236   _JRXRDY         BIT 0xc0
0000            237   _JTXRDY         BIT 0xc1
0000            238   _JRXEN          BIT 0xc2
0000            239   _JTXEN          BIT 0xc3
0000            240   _JTXFULL        BIT 0xc4
0000            241   _JRXFULL        BIT 0xc5
0000            242   _JTXEMPTY       BIT 0xc6
0000            243   _JTDI           BIT 0xc7
0000            244   ;--------------------------------------------------------
0000            245   ; overlayable register banks
0000            246   ;--------------------------------------------------------
0000            247            rbank0 segment data overlay
0000            248   ;--------------------------------------------------------
0000            249   ; internal ram data
0000            250   ;--------------------------------------------------------
0000            251            rseg R_DSEG
0000            252   ;--------------------------------------------------------
0000            253   ; overlayable items in internal ram 
0000            254   ;--------------------------------------------------------
0000            255            rseg R_OSEG
0000            256   ;--------------------------------------------------------
0000            257   ; indirectly addressable internal ram data
0000            258   ;--------------------------------------------------------
0000            259            rseg R_ISEG
0000            260   ;--------------------------------------------------------
0000            261   ; absolute internal ram data
0000            262   ;--------------------------------------------------------
0000            263            DSEG
0000            264   ;--------------------------------------------------------
0000            265   ; bit data
0000            266   ;--------------------------------------------------------
0000            267            rseg R_BSEG
0000            268   ;--------------------------------------------------------
0000            269   ; paged external ram data
0000            270   ;--------------------------------------------------------
0000            271            rseg R_PSEG
0000            272   ;--------------------------------------------------------
0000            273   ; external ram data
0000            274   ;--------------------------------------------------------
0000            275            rseg R_XSEG
0000            276   ;--------------------------------------------------------
0000            277   ; absolute external ram data
0000            278   ;--------------------------------------------------------
0000            279            XSEG
0000            280   ;--------------------------------------------------------
0000            281   ; external initialized ram data
0000            282   ;--------------------------------------------------------
0000            283            rseg R_IXSEG
0000            284            rseg R_HOME
0000            285            rseg R_GSINIT
0000            286            rseg R_CSEG
0000            287   ;--------------------------------------------------------
0000            288   ; Reset entry point and interrupt vectors
0000            289   ;--------------------------------------------------------
0000            290            CSEG at 0x0000
0000 020000     291            ljmp    _crt0
0003            292   ;--------------------------------------------------------
0003            293   ; global & static initialisations
0003            294   ;--------------------------------------------------------
0000            295            rseg R_HOME
0000            296            rseg R_GSINIT
0000            297            rseg R_GSINIT
0000            298   ;--------------------------------------------------------
0000            299   ; data variables initialization
0000            300   ;--------------------------------------------------------
0000            301            rseg R_DINIT
0000            302            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            303   ;--------------------------------------------------------
0000            304   ; code
0000            305   ;--------------------------------------------------------
0000            306            rseg R_CSEG
0000            307   ;------------------------------------------------------------
0000            308   ;Allocation info for local variables in function 'de2_8052_crt0'
0000            309   ;------------------------------------------------------------
0000            310   ;------------------------------------------------------------
0000            311   ;        c:/call51/bin64/../include/mcs51/DE2_8052.h:317: void de2_8052_crt0 (void) _naked
0000            312   ;        -----------------------------------------
0000            313   ;         function de2_8052_crt0
0000            314   ;        -----------------------------------------
0000            315   _de2_8052_crt0:
0000            316   ;        naked function: no prologue.
0000            317   ;        c:/call51/bin64/../include/mcs51/DE2_8052.h:386: _endasm;
0000            318            
0000            319            
0000            320             rseg R_GSINIT
0000            321             public _crt0
0000            322            _crt0:
0000 7581FF     323             mov sp,#_stack_start-1
0003 120000     324             lcall __c51_external_startup
0006 E582       325             mov a,dpl
0008 6000       326             jz __c51_init_data
000A 020000     327             ljmp __c51_program_startup
000D            328            __c51_init_data:
000D            329            
000D            330   ; Initialize xdata variables
000D            331            
000D 758200     332             mov dpl, #_R_XINIT_start
0010 758300     333             mov dph, #(_R_XINIT_start>>8)
0013 758400     334             mov _DPL1, #_R_IXSEG_start
0016 758500     335             mov _DPH1, #(_R_IXSEG_start>>8)
0019 7800       336             mov r0, #_R_IXSEG_size
001B 7900       337             mov r1, #(_R_IXSEG_size>>8)
001D            338            
001D            339            XInitLoop?repeat?:
001D E8         340             mov a, r0
001E 49         341             orl a, r1
001F 6000       342             jz XInitLoop?done?
0021 E4         343             clr a
0022 758600     344             mov _DPS, #0 ; Using dpl, dph
0025 93         345             movc a,@a+dptr
0026 A3         346             inc dptr
0027 758601     347             mov _DPS, #1 ; Using DPL1, DPH1
002A F0         348             movx @dptr, a
002B A3         349             inc dptr
002C 18         350             dec r0
002D B8FF80     351             cjne r0, #0xff, XInitLoop?repeat?
0030 19         352             dec r1
0031 8000       353             sjmp XInitLoop?repeat?
0033            354            
0033            355            XInitLoop?done?:
0033            356            
0033            357   ; Clear xdata variables
0033 758600     358             mov _DPS, #0 ; Make sure we are using dpl, dph
0036 758200     359             mov dpl, #_R_XSEG_start
0039 758300     360             mov dph, #(_R_XSEG_start>>8)
003C 7C00       361             mov r4, #_R_XSEG_size
003E 7D00       362             mov r5, #(_R_XSEG_size>>8)
0040            363            
0040            364            XClearLoop?repeat?:
0040 EC         365             mov a, r4
0041 4D         366             orl a, r5
0042 6000       367             jz XClearLoop?done?
0044 E4         368             clr a
0045 F0         369             movx @dptr, a
0046 A3         370             inc dptr
0047 1C         371             dec r4
0048 BCFF40     372             cjne r4, #0xff, XClearLoop?repeat?
004B 1D         373             dec r5
004C 8000       374             sjmp XClearLoop?repeat?
004E            375            
004E            376            XClearLoop?done?:
004E 120000     377             lcall _R_DINIT_start ; Initialize data/idata variables
0051            378            
0051            379            __c51_program_startup:
0051 120000     380             lcall _main
0054            381            
0054            382            forever?home?:
0054 8000       383             sjmp forever?home?
0056            384            
0056            385             
0056            386   ;        naked function: no epilogue.
0056            387   ;------------------------------------------------------------
0056            388   ;Allocation info for local variables in function 'Wait40us'
0056            389   ;------------------------------------------------------------
0056            390   ;------------------------------------------------------------
0056            391   ;        lcd_test.c:5: void Wait40us(void)
0056            392   ;        -----------------------------------------
0056            393   ;         function Wait40us
0056            394   ;        -----------------------------------------
0056            395   _Wait40us:
0056            396            using   0
0056            397   ;        lcd_test.c:19: _endasm;
0056            398            
0056 C000       399              push AR0
0058 78C8       400              mov R0, #200
005A            401             X1:
005A 00         402              nop
005B 00         403              nop
005C 00         404              nop
005D 00         405              nop
005E 00         406              nop
005F 00         407              nop
0060 D800       408              djnz R0, X1 ; 9 machine cycles-> 9*30ns*200>40us
0062 D000       409                 pop AR0
0064            410                
0064 22         411            ret
0065            412   ;------------------------------------------------------------
0065            413   ;Allocation info for local variables in function 'LCD_command'
0065            414   ;------------------------------------------------------------
0065            415   ;c                         Allocated to registers 
0065            416   ;------------------------------------------------------------
0065            417   ;        lcd_test.c:44: void LCD_command (unsigned char c)
0065            418   ;        -----------------------------------------
0065            419   ;         function LCD_command
0065            420   ;        -----------------------------------------
0065            421   _LCD_command:
0065 8582D9     422            mov     _LCD_DATA,dpl
0068            423   ;        lcd_test.c:47: LCD_RS=0;
0068 C2DA       424            clr     _LCD_RS
006A            425   ;        lcd_test.c:48: LCD_EN=1;
006A D2D9       426            setb    _LCD_EN
006C            427   ;        lcd_test.c:49: LCD_EN=0;
006C C2D9       428            clr     _LCD_EN
006E            429   ;        lcd_test.c:50: Wait40us();
006E 020000     430            ljmp    _Wait40us
0071            431   ;------------------------------------------------------------
0071            432   ;Allocation info for local variables in function 'LCD_data'
0071            433   ;------------------------------------------------------------
0071            434   ;c                         Allocated to registers 
0071            435   ;------------------------------------------------------------
0071            436   ;        lcd_test.c:53: void LCD_data (unsigned char c)
0071            437   ;        -----------------------------------------
0071            438   ;         function LCD_data
0071            439   ;        -----------------------------------------
0071            440   _LCD_data:
0071 8582D9     441            mov     _LCD_DATA,dpl
0074            442   ;        lcd_test.c:56: LCD_RS=1;
0074 D2DA       443            setb    _LCD_RS
0076            444   ;        lcd_test.c:57: LCD_EN=1;
0076 D2D9       445            setb    _LCD_EN
0078            446   ;        lcd_test.c:58: LCD_EN=0;
0078 C2D9       447            clr     _LCD_EN
007A            448   ;        lcd_test.c:59: Wait40us();
007A 020000     449            ljmp    _Wait40us
007D            450   ;------------------------------------------------------------
007D            451   ;Allocation info for local variables in function 'LCD_puts'
007D            452   ;------------------------------------------------------------
007D            453   ;str                       Allocated to registers r2 r3 r4 
007D            454   ;j                         Allocated to registers r5 
007D            455   ;------------------------------------------------------------
007D            456   ;        lcd_test.c:63: void LCD_puts(char * str)
007D            457   ;        -----------------------------------------
007D            458   ;         function LCD_puts
007D            459   ;        -----------------------------------------
007D            460   _LCD_puts:
007D AA82       461            mov     r2,dpl
007F AB83       462            mov     r3,dph
0081 ACF0       463            mov     r4,b
0083            464   ;        lcd_test.c:66: for(j=0; str[j]!=0; j++)
0083 7D00       465            mov     r5,#0x00
0085            466   L006001?:
0085 ED         467            mov     a,r5
0086 2A         468            add     a,r2
0087 FE         469            mov     r6,a
0088 E4         470            clr     a
0089 3B         471            addc    a,r3
008A FF         472            mov     r7,a
008B 8C00       473            mov     ar0,r4
008D 8E82       474            mov     dpl,r6
008F 8F83       475            mov     dph,r7
0091 88F0       476            mov     b,r0
0093 120000     477            lcall   __gptrget
0096 FE         478            mov     r6,a
0097 6000       479            jz      L006005?
0099            480   ;        lcd_test.c:68: LCD_data(str[j]);
0099 8E82       481            mov     dpl,r6
009B C002       482            push    ar2
009D C003       483            push    ar3
009F C004       484            push    ar4
00A1 C005       485            push    ar5
00A3 120000     486            lcall   _LCD_data
00A6 D005       487            pop     ar5
00A8 D004       488            pop     ar4
00AA D003       489            pop     ar3
00AC D002       490            pop     ar2
00AE            491   ;        lcd_test.c:66: for(j=0; str[j]!=0; j++)
00AE 0D         492            inc     r5
00AF 8000       493            sjmp    L006001?
00B1            494   L006005?:
00B1 22         495            ret
00B2            496   ;------------------------------------------------------------
00B2            497   ;Allocation info for local variables in function 'main'
00B2            498   ;------------------------------------------------------------
00B2            499   ;j                         Allocated to registers r2 
00B2            500   ;------------------------------------------------------------
00B2            501   ;        lcd_test.c:72: void main (void)
00B2            502   ;        -----------------------------------------
00B2            503   ;         function main
00B2            504   ;        -----------------------------------------
00B2            505   _main:
00B2            506   ;        lcd_test.c:77: HEX0=0xff;
00B2 7591FF     507            mov     _HEX0,#0xFF
00B5            508   ;        lcd_test.c:78: HEX1=0xff;
00B5 7592FF     509            mov     _HEX1,#0xFF
00B8            510   ;        lcd_test.c:79: HEX2=0xff;
00B8 7593FF     511            mov     _HEX2,#0xFF
00BB            512   ;        lcd_test.c:80: HEX3=0xff;
00BB 7594FF     513            mov     _HEX3,#0xFF
00BE            514   ;        lcd_test.c:81: HEX4=0xff;
00BE 758EFF     515            mov     _HEX4,#0xFF
00C1            516   ;        lcd_test.c:82: HEX5=0xff;
00C1 758FFF     517            mov     _HEX5,#0xFF
00C4            518   ;        lcd_test.c:83: HEX6=0xff;
00C4 7596FF     519            mov     _HEX6,#0xFF
00C7            520   ;        lcd_test.c:84: HEX7=0xff;
00C7 7597FF     521            mov     _HEX7,#0xFF
00CA            522   ;        lcd_test.c:85: LEDRA=0;
00CA 75E800     523            mov     _LEDRA,#0x00
00CD            524   ;        lcd_test.c:86: LEDRB=0;
00CD 759500     525            mov     _LEDRB,#0x00
00D0            526   ;        lcd_test.c:87: LEDRC=0;
00D0 759E00     527            mov     _LEDRC,#0x00
00D3            528   ;        lcd_test.c:88: LEDG=0;
00D3 75F800     529            mov     _LEDG,#0x00
00D6            530   ;        lcd_test.c:92: LCD_ON=1; // Turn LCD on, and wait a bit.
00D6 D2DB       531            setb    _LCD_ON
00D8            532   ;        lcd_test.c:93: Wait40us();
00D8 120000     533            lcall   _Wait40us
00DB            534   ;        lcd_test.c:95: LCD_MOD=0xff; // Use LCD_DATA as output port
00DB 75DAFF     535            mov     _LCD_MOD,#0xFF
00DE            536   ;        lcd_test.c:96: LCD_RW=0; // Only writing to the LCD in this code.
00DE C2D8       537            clr     _LCD_RW
00E0            538   ;        lcd_test.c:98: LCD_command(0x0c); // Display on command
00E0 75820C     539            mov     dpl,#0x0C
00E3 120000     540            lcall   _LCD_command
00E6            541   ;        lcd_test.c:99: LCD_command(0x38); // 8-bits interface, 2 lines, 5x7 characters
00E6 758238     542            mov     dpl,#0x38
00E9 120000     543            lcall   _LCD_command
00EC            544   ;        lcd_test.c:100: LCD_command(0x01); // Clear screen (Warning, very slow command!)
00EC 758201     545            mov     dpl,#0x01
00EF 120000     546            lcall   _LCD_command
00F2            547   ;        lcd_test.c:101: for(j=0; j<100; j++) Wait40us(); // Delay loop needed for 'clear screen' command above
00F2 7A64       548            mov     r2,#0x64
00F4            549   L007003?:
00F4 C002       550            push    ar2
00F6 120000     551            lcall   _Wait40us
00F9 D002       552            pop     ar2
00FB DA30       553            djnz    r2,L007003?
00FD            554   ;        lcd_test.c:103: LCD_command(0x80); // Move to first column of first row
00FD 758280     555            mov     dpl,#0x80
0100 120000     556            lcall   _LCD_command
0103            557   ;        lcd_test.c:104: LCD_puts("Hello World!");
0103 90CCA0     558            mov     dptr,#__str_0
0106 75F080     559            mov     b,#0x80
0109 120000     560            lcall   _LCD_puts
010C            561   ;        lcd_test.c:106: LCD_command(0xC0); // Move to first column of second row
010C 7582C0     562            mov     dpl,#0xC0
010F 120000     563            lcall   _LCD_command
0112            564   ;        lcd_test.c:107: LCD_puts("Second LCD line.");
0112 90CD10     565            mov     dptr,#__str_1
0115 75F080     566            mov     b,#0x80
0118 020000     567            ljmp    _LCD_puts
0000            568            rseg R_CSEG
0000            569   
0000            570            rseg R_XINIT
0000            571   
0000            572            rseg R_CONST
0000            573   __str_0:
0000 48656C6C   574            db 'Hello World!'
     6F20576F
     726C6421
000C 00         575            db 0x00
000D            576   __str_1:
000D 5365636F   577            db 'Second LCD line.'
     6E64204C
     4344206C
     696E652E
001D 00         578            db 0x00
001E            579   
0003            580            CSEG
0003            581   
0003            582   end
