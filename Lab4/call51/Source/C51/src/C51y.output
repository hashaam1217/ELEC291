

Terminals which are not used:

   DOUBLE
   RANGE
   FAR
   IFX
   ADDRESS_OF
   GET_VALUE_AT_ADDRESS
   SPIL
   UNSPIL
   GETHBIT
   GETABIT
   GETBYTE
   GETWORD
   BITWISEAND
   UNARYMINUS
   IPUSH
   IPOP
   PCALL
   ENDFUNCTION
   JUMPTABLE
   RRC
   RLC
   CAST
   CALL
   PARAM
   NULLOP
   BLOCK
   LABEL
   RECEIVE
   SEND
   ARRAYINIT
   DUMMY_READ_VOLATILE
   ENDCRITICAL
   SWAP


State 135 contains 2 shift/reduce conflicts.
State 139 contains 1 shift/reduce conflict.
State 315 contains 1 shift/reduce conflict.
State 316 contains 1 shift/reduce conflict.
State 419 contains 1 shift/reduce conflict.

Grammar
rule 1    file ->		/* empty */
rule 2    file -> program
rule 3    program -> external_definition
rule 4    program -> program external_definition
rule 5    external_definition -> function_definition
rule 6    external_definition -> declaration
rule 7    function_definition -> function_declarator function_body
rule 8    function_definition -> declaration_specifiers function_declarator function_body
rule 9    function_attribute -> function_attributes
rule 10   function_attribute -> function_attributes function_attribute
rule 11   function_attributes -> USING constant_expr
rule 12   function_attributes -> REENTRANT
rule 13   function_attributes -> CRITICAL
rule 14   function_attributes -> NAKED
rule 15   function_attributes -> JAVANATIVE
rule 16   function_attributes -> OVERLAY
rule 17   function_attributes -> NONBANKED
rule 18   function_attributes -> SHADOWREGS
rule 19   function_attributes -> WPARAM
rule 20   function_attributes -> BANKED
rule 21   function_attributes -> Interrupt_storage
rule 22   function_body -> compound_statement
rule 23   function_body -> declaration_list compound_statement
rule 24   primary_expr -> identifier
rule 25   primary_expr -> CONSTANT
rule 26   primary_expr -> string_literal
rule 27   primary_expr -> '(' expr ')'
rule 28   string_literal -> STRING_LITERAL
rule 29   postfix_expr -> primary_expr
rule 30   postfix_expr -> postfix_expr '[' expr ']'
rule 31   postfix_expr -> postfix_expr '(' ')'
rule 32   postfix_expr -> postfix_expr '(' argument_expr_list ')'
rule 33   @1 ->		/* empty */
rule 34   postfix_expr -> postfix_expr '.' @1 identifier
rule 35   @2 ->		/* empty */
rule 36   postfix_expr -> postfix_expr PTR_OP @2 identifier
rule 37   postfix_expr -> postfix_expr INC_OP
rule 38   postfix_expr -> postfix_expr DEC_OP
rule 39   argument_expr_list -> assignment_expr
rule 40   argument_expr_list -> assignment_expr ',' argument_expr_list
rule 41   unary_expr -> postfix_expr
rule 42   unary_expr -> INC_OP unary_expr
rule 43   unary_expr -> DEC_OP unary_expr
rule 44   unary_expr -> unary_operator cast_expr
rule 45   unary_expr -> SIZEOF unary_expr
rule 46   unary_expr -> SIZEOF '(' type_name ')'
rule 47   unary_expr -> TYPEOF unary_expr
rule 48   unary_operator -> '&'
rule 49   unary_operator -> '*'
rule 50   unary_operator -> '+'
rule 51   unary_operator -> '-'
rule 52   unary_operator -> '~'
rule 53   unary_operator -> '!'
rule 54   cast_expr -> unary_expr
rule 55   cast_expr -> '(' type_name ')' cast_expr
rule 56   multiplicative_expr -> cast_expr
rule 57   multiplicative_expr -> multiplicative_expr '*' cast_expr
rule 58   multiplicative_expr -> multiplicative_expr '/' cast_expr
rule 59   multiplicative_expr -> multiplicative_expr '%' cast_expr
rule 60   additive_expr -> multiplicative_expr
rule 61   additive_expr -> additive_expr '+' multiplicative_expr
rule 62   additive_expr -> additive_expr '-' multiplicative_expr
rule 63   shift_expr -> additive_expr
rule 64   shift_expr -> shift_expr LEFT_OP additive_expr
rule 65   shift_expr -> shift_expr RIGHT_OP additive_expr
rule 66   relational_expr -> shift_expr
rule 67   relational_expr -> relational_expr '<' shift_expr
rule 68   relational_expr -> relational_expr '>' shift_expr
rule 69   relational_expr -> relational_expr LE_OP shift_expr
rule 70   relational_expr -> relational_expr GE_OP shift_expr
rule 71   equality_expr -> relational_expr
rule 72   equality_expr -> equality_expr EQ_OP relational_expr
rule 73   equality_expr -> equality_expr NE_OP relational_expr
rule 74   and_expr -> equality_expr
rule 75   and_expr -> and_expr '&' equality_expr
rule 76   exclusive_or_expr -> and_expr
rule 77   exclusive_or_expr -> exclusive_or_expr '^' and_expr
rule 78   inclusive_or_expr -> exclusive_or_expr
rule 79   inclusive_or_expr -> inclusive_or_expr '|' exclusive_or_expr
rule 80   logical_and_expr -> inclusive_or_expr
rule 81   @3 ->		/* empty */
rule 82   logical_and_expr -> logical_and_expr AND_OP @3 inclusive_or_expr
rule 83   logical_or_expr -> logical_and_expr
rule 84   @4 ->		/* empty */
rule 85   logical_or_expr -> logical_or_expr OR_OP @4 logical_and_expr
rule 86   conditional_expr -> logical_or_expr
rule 87   @5 ->		/* empty */
rule 88   conditional_expr -> logical_or_expr '?' @5 logical_or_expr ':' conditional_expr
rule 89   assignment_expr -> conditional_expr
rule 90   assignment_expr -> cast_expr assignment_operator assignment_expr
rule 91   assignment_operator -> '='
rule 92   assignment_operator -> MUL_ASSIGN
rule 93   assignment_operator -> DIV_ASSIGN
rule 94   assignment_operator -> MOD_ASSIGN
rule 95   assignment_operator -> ADD_ASSIGN
rule 96   assignment_operator -> SUB_ASSIGN
rule 97   assignment_operator -> LEFT_ASSIGN
rule 98   assignment_operator -> RIGHT_ASSIGN
rule 99   assignment_operator -> AND_ASSIGN
rule 100  assignment_operator -> XOR_ASSIGN
rule 101  assignment_operator -> OR_ASSIGN
rule 102  expr -> assignment_expr
rule 103  @6 ->		/* empty */
rule 104  expr -> expr ',' @6 assignment_expr
rule 105  constant_expr -> conditional_expr
rule 106  declaration -> declaration_specifiers ';'
rule 107  declaration -> declaration_specifiers init_declarator_list ';'
rule 108  declaration_specifiers -> declaration_specifiers_
rule 109  declaration_specifiers_ -> storage_class_specifier
rule 110  declaration_specifiers_ -> storage_class_specifier declaration_specifiers_
rule 111  declaration_specifiers_ -> type_specifier
rule 112  declaration_specifiers_ -> type_specifier declaration_specifiers_
rule 113  declaration_specifiers_ -> function_specifier
rule 114  declaration_specifiers_ -> function_specifier declaration_specifiers_
rule 115  init_declarator_list -> init_declarator
rule 116  init_declarator_list -> init_declarator_list ',' init_declarator
rule 117  init_declarator -> declarator
rule 118  init_declarator -> declarator '=' initializer
rule 119  designation_opt ->		/* empty */
rule 120  designation_opt -> designation
rule 121  designation -> designator_list '='
rule 122  designator_list -> designator
rule 123  designator_list -> designator_list designator
rule 124  designator -> '[' constant_expr ']'
rule 125  designator -> '.' identifier
rule 126  storage_class_specifier -> TYPEDEF
rule 127  storage_class_specifier -> EXTERN
rule 128  storage_class_specifier -> STATIC
rule 129  storage_class_specifier -> AUTO
rule 130  storage_class_specifier -> REGISTER
rule 131  function_specifier -> INLINE
rule 132  Interrupt_storage -> INTERRUPT
rule 133  Interrupt_storage -> INTERRUPT constant_expr
rule 134  type_specifier -> type_specifier2
rule 135  type_specifier -> type_specifier2 AT constant_expr
rule 136  type_specifier2 -> CHAR
rule 137  type_specifier2 -> SHORT
rule 138  type_specifier2 -> INT
rule 139  type_specifier2 -> LONG
rule 140  type_specifier2 -> SIGNED
rule 141  type_specifier2 -> UNSIGNED
rule 142  type_specifier2 -> VOID
rule 143  type_specifier2 -> CONST
rule 144  type_specifier2 -> VOLATILE
rule 145  type_specifier2 -> RESTRICT
rule 146  type_specifier2 -> FLOAT
rule 147  type_specifier2 -> FIXED16X16
rule 148  type_specifier2 -> XDATA
rule 149  type_specifier2 -> CODE
rule 150  type_specifier2 -> EEPROM
rule 151  type_specifier2 -> DATA
rule 152  type_specifier2 -> IDATA
rule 153  type_specifier2 -> PDATA
rule 154  type_specifier2 -> BIT
rule 155  type_specifier2 -> struct_or_union_specifier
rule 156  type_specifier2 -> enum_specifier
rule 157  type_specifier2 -> TYPE_NAME
rule 158  type_specifier2 -> sfr_reg_bit
rule 159  sfr_reg_bit -> SBIT
rule 160  sfr_reg_bit -> sfr_attributes
rule 161  sfr_attributes -> SFR
rule 162  sfr_attributes -> SFR BANKED
rule 163  sfr_attributes -> SFR16
rule 164  sfr_attributes -> SFR32
rule 165  @7 ->		/* empty */
rule 166  struct_or_union_specifier -> struct_or_union opt_stag @7 '{' struct_declaration_list '}'
rule 167  struct_or_union_specifier -> struct_or_union stag
rule 168  struct_or_union -> STRUCT
rule 169  struct_or_union -> UNION
rule 170  opt_stag -> stag
rule 171  opt_stag ->		/* empty */
rule 172  stag -> identifier
rule 173  struct_declaration_list -> struct_declaration
rule 174  struct_declaration_list -> struct_declaration_list struct_declaration
rule 175  struct_declaration -> type_specifier_list struct_declarator_list ';'
rule 176  struct_declarator_list -> struct_declarator
rule 177  struct_declarator_list -> struct_declarator_list ',' struct_declarator
rule 178  struct_declarator -> declarator
rule 179  struct_declarator -> ':' constant_expr
rule 180  struct_declarator -> declarator ':' constant_expr
rule 181  struct_declarator ->		/* empty */
rule 182  enum_specifier -> ENUM '{' enumerator_list '}'
rule 183  enum_specifier -> ENUM identifier '{' enumerator_list '}'
rule 184  enum_specifier -> ENUM identifier
rule 185  enumerator_list -> enumerator
rule 186  enumerator_list -> enumerator_list ','
rule 187  enumerator_list -> enumerator_list ',' enumerator
rule 188  enumerator -> identifier opt_assign_expr
rule 189  opt_assign_expr -> '=' constant_expr
rule 190  opt_assign_expr ->		/* empty */
rule 191  declarator -> declarator3
rule 192  declarator -> pointer declarator3
rule 193  declarator3 -> declarator2_function_attributes
rule 194  declarator3 -> declarator2
rule 195  function_declarator -> declarator2_function_attributes
rule 196  function_declarator -> pointer declarator2_function_attributes
rule 197  declarator2_function_attributes -> function_declarator2
rule 198  declarator2_function_attributes -> function_declarator2 function_attribute
rule 199  declarator2 -> identifier
rule 200  declarator2 -> '(' declarator ')'
rule 201  declarator2 -> declarator3 '[' ']'
rule 202  declarator2 -> declarator3 '[' constant_expr ']'
rule 203  function_declarator2 -> declarator2 '(' ')'
rule 204  @8 ->		/* empty */
rule 205  function_declarator2 -> declarator2 '(' @8 parameter_type_list ')'
rule 206  function_declarator2 -> declarator2 '(' identifier_list ')'
rule 207  pointer -> unqualified_pointer
rule 208  pointer -> unqualified_pointer type_specifier_list
rule 209  pointer -> unqualified_pointer pointer
rule 210  pointer -> unqualified_pointer type_specifier_list pointer
rule 211  unqualified_pointer -> '*'
rule 212  type_specifier_list -> type_specifier_list_
rule 213  type_specifier_list_ -> type_specifier
rule 214  type_specifier_list_ -> type_specifier_list_ type_specifier
rule 215  identifier_list -> identifier
rule 216  identifier_list -> identifier_list ',' identifier
rule 217  parameter_type_list -> parameter_list
rule 218  parameter_type_list -> parameter_list ',' VAR_ARGS
rule 219  parameter_list -> parameter_declaration
rule 220  parameter_list -> parameter_list ',' parameter_declaration
rule 221  parameter_declaration -> type_specifier_list declarator
rule 222  parameter_declaration -> type_name
rule 223  type_name -> type_specifier_list
rule 224  type_name -> type_specifier_list abstract_declarator
rule 225  abstract_declarator -> pointer
rule 226  abstract_declarator -> abstract_declarator2
rule 227  abstract_declarator -> pointer abstract_declarator2
rule 228  abstract_declarator2 -> '(' abstract_declarator ')'
rule 229  abstract_declarator2 -> '[' ']'
rule 230  abstract_declarator2 -> '[' constant_expr ']'
rule 231  abstract_declarator2 -> abstract_declarator2 '[' ']'
rule 232  abstract_declarator2 -> abstract_declarator2 '[' constant_expr ']'
rule 233  abstract_declarator2 -> '(' ')'
rule 234  abstract_declarator2 -> '(' parameter_type_list ')'
rule 235  abstract_declarator2 -> abstract_declarator2 '(' ')'
rule 236  @9 ->		/* empty */
rule 237  abstract_declarator2 -> abstract_declarator2 '(' @9 parameter_type_list ')'
rule 238  initializer -> assignment_expr
rule 239  initializer -> '{' initializer_list '}'
rule 240  initializer -> '{' initializer_list ',' '}'
rule 241  initializer_list -> designation_opt initializer
rule 242  initializer_list -> initializer_list ',' designation_opt initializer
rule 243  statement -> labeled_statement
rule 244  statement -> compound_statement
rule 245  statement -> expression_statement
rule 246  statement -> selection_statement
rule 247  statement -> iteration_statement
rule 248  statement -> jump_statement
rule 249  statement -> critical_statement
rule 250  statement -> INLINEASM ';'
rule 251  critical -> CRITICAL
rule 252  critical_statement -> critical statement
rule 253  labeled_statement -> identifier ':'
rule 254  labeled_statement -> CASE constant_expr ':'
rule 255  @10 ->		/* empty */
rule 256  labeled_statement -> DEFAULT @10 ':'
rule 257  start_block -> '{'
rule 258  end_block -> '}'
rule 259  compound_statement -> start_block end_block
rule 260  compound_statement -> start_block statement_list end_block
rule 261  compound_statement -> start_block declaration_list end_block
rule 262  compound_statement -> start_block declaration_list statement_list end_block
rule 263  compound_statement -> error ';'
rule 264  declaration_list -> declaration
rule 265  declaration_list -> declaration_list declaration
rule 266  statement_list -> statement
rule 267  statement_list -> statement_list statement
rule 268  expression_statement -> ';'
rule 269  expression_statement -> expr ';'
rule 270  else_statement -> ELSE statement
rule 271  else_statement ->		/* empty */
rule 272  @11 ->		/* empty */
rule 273  selection_statement -> IF '(' expr ')' @11 statement else_statement
rule 274  @12 ->		/* empty */
rule 275  selection_statement -> SWITCH '(' expr ')' @12 statement
rule 276  while -> WHILE
rule 277  do -> DO
rule 278  for -> FOR
rule 279  @13 ->		/* empty */
rule 280  iteration_statement -> while '(' expr ')' @13 statement
rule 281  iteration_statement -> do statement WHILE '(' expr ')' ';'
rule 282  iteration_statement -> for '(' expr_opt ';' expr_opt ';' expr_opt ')' statement
rule 283  expr_opt ->		/* empty */
rule 284  expr_opt -> expr
rule 285  jump_statement -> GOTO identifier ';'
rule 286  jump_statement -> CONTINUE ';'
rule 287  jump_statement -> BREAK ';'
rule 288  jump_statement -> RETURN ';'
rule 289  jump_statement -> RETURN expr ';'
rule 290  identifier -> IDENTIFIER

Terminals, with rules where they appear

$ (-1)
'!' (33) 53
'%' (37) 59
'&' (38) 48 75
'(' (40) 27 31 32 46 55 200 203 205 206 228 233 234 235 237 273 275
    280 281 282
')' (41) 27 31 32 46 55 200 203 205 206 228 233 234 235 237 273 275
    280 281 282
'*' (42) 49 57 211
'+' (43) 50 61
',' (44) 40 104 116 177 186 187 216 218 220 240 242
'-' (45) 51 62
'.' (46) 34 125
'/' (47) 58
':' (58) 88 179 180 253 254 256
';' (59) 106 107 175 250 263 268 269 281 282 285 286 287 288 289
'<' (60) 67
'=' (61) 91 118 121 189
'>' (62) 68
'?' (63) 88
'[' (91) 30 124 201 202 229 230 231 232
']' (93) 30 124 201 202 229 230 231 232
'^' (94) 77
'{' (123) 166 182 183 239 240 257
'|' (124) 79
'}' (125) 166 182 183 239 240 258
'~' (126) 52
error (256) 263
IDENTIFIER (257) 290
TYPE_NAME (258) 157
CONSTANT (259) 25
STRING_LITERAL (260) 28
SIZEOF (261) 45 46
TYPEOF (262) 47
PTR_OP (263) 36
INC_OP (264) 37 42
DEC_OP (265) 38 43
LEFT_OP (266) 64
RIGHT_OP (267) 65
LE_OP (268) 69
GE_OP (269) 70
EQ_OP (270) 72
NE_OP (271) 73
AND_OP (272) 82
OR_OP (273) 85
MUL_ASSIGN (274) 92
DIV_ASSIGN (275) 93
MOD_ASSIGN (276) 94
ADD_ASSIGN (277) 95
SUB_ASSIGN (278) 96
LEFT_ASSIGN (279) 97
RIGHT_ASSIGN (280) 98
AND_ASSIGN (281) 99
XOR_ASSIGN (282) 100
OR_ASSIGN (283) 101
TYPEDEF (284) 126
EXTERN (285) 127
STATIC (286) 128
AUTO (287) 129
REGISTER (288) 130
CODE (289) 149
EEPROM (290) 150
INTERRUPT (291) 132 133
SFR (292) 161 162
SFR16 (293) 163
SFR32 (294) 164
AT (295) 135
SBIT (296) 159
REENTRANT (297) 12
USING (298) 11
XDATA (299) 148
DATA (300) 151
IDATA (301) 152
PDATA (302) 153
VAR_ARGS (303) 218
CRITICAL (304) 13 251
NONBANKED (305) 17
BANKED (306) 20 162
SHADOWREGS (307) 18
WPARAM (308) 19
CHAR (309) 136
SHORT (310) 137
INT (311) 138
LONG (312) 139
SIGNED (313) 140
UNSIGNED (314) 141
FLOAT (315) 146
DOUBLE (316)
FIXED16X16 (317) 147
CONST (318) 143
VOLATILE (319) 144
VOID (320) 142
BIT (321) 154
STRUCT (322) 168
UNION (323) 169
ENUM (324) 182 183 184
RANGE (325)
FAR (326)
CASE (327) 254
DEFAULT (328) 256
IF (329) 273
ELSE (330) 270
SWITCH (331) 275
WHILE (332) 276 281
DO (333) 277
FOR (334) 278
GOTO (335) 285
CONTINUE (336) 286
BREAK (337) 287
RETURN (338) 288 289
NAKED (339) 14
JAVANATIVE (340) 15
OVERLAY (341) 16
INLINEASM (342) 250
IFX (343)
ADDRESS_OF (344)
GET_VALUE_AT_ADDRESS (345)
SPIL (346)
UNSPIL (347)
GETHBIT (348)
GETABIT (349)
GETBYTE (350)
GETWORD (351)
BITWISEAND (352)
UNARYMINUS (353)
IPUSH (354)
IPOP (355)
PCALL (356)
ENDFUNCTION (357)
JUMPTABLE (358)
RRC (359)
RLC (360)
CAST (361)
CALL (362)
PARAM (363)
NULLOP (364)
BLOCK (365)
LABEL (366)
RECEIVE (367)
SEND (368)
ARRAYINIT (369)
DUMMY_READ_VOLATILE (370)
ENDCRITICAL (371)
SWAP (372)
INLINE (373) 131
RESTRICT (374) 145

Nonterminals, with rules where they appear

file (145)
    on left: 1 2
program (146)
    on left: 3 4, on right: 2 4
external_definition (147)
    on left: 5 6, on right: 3 4
function_definition (148)
    on left: 7 8, on right: 5
function_attribute (149)
    on left: 9 10, on right: 10 198
function_attributes (150)
    on left: 11 12 13 14 15 16 17 18 19 20 21, on right: 9 10
function_body (151)
    on left: 22 23, on right: 7 8
primary_expr (152)
    on left: 24 25 26 27, on right: 29
string_literal (153)
    on left: 28, on right: 26
postfix_expr (154)
    on left: 29 30 31 32 34 36 37 38, on right: 30 31 32 34 36 37 38
    41
@1 (155)
    on left: 33, on right: 34
@2 (156)
    on left: 35, on right: 36
argument_expr_list (157)
    on left: 39 40, on right: 32 40
unary_expr (158)
    on left: 41 42 43 44 45 46 47, on right: 42 43 45 47 54
unary_operator (159)
    on left: 48 49 50 51 52 53, on right: 44
cast_expr (160)
    on left: 54 55, on right: 44 55 56 57 58 59 90
multiplicative_expr (161)
    on left: 56 57 58 59, on right: 57 58 59 60 61 62
additive_expr (162)
    on left: 60 61 62, on right: 61 62 63 64 65
shift_expr (163)
    on left: 63 64 65, on right: 64 65 66 67 68 69 70
relational_expr (164)
    on left: 66 67 68 69 70, on right: 67 68 69 70 71 72 73
equality_expr (165)
    on left: 71 72 73, on right: 72 73 74 75
and_expr (166)
    on left: 74 75, on right: 75 76 77
exclusive_or_expr (167)
    on left: 76 77, on right: 77 78 79
inclusive_or_expr (168)
    on left: 78 79, on right: 79 80 82
logical_and_expr (169)
    on left: 80 82, on right: 82 83 85
@3 (170)
    on left: 81, on right: 82
logical_or_expr (171)
    on left: 83 85, on right: 85 86 88
@4 (172)
    on left: 84, on right: 85
conditional_expr (173)
    on left: 86 88, on right: 88 89 105
@5 (174)
    on left: 87, on right: 88
assignment_expr (175)
    on left: 89 90, on right: 39 40 90 102 104 238
assignment_operator (176)
    on left: 91 92 93 94 95 96 97 98 99 100 101, on right: 90
expr (177)
    on left: 102 104, on right: 27 30 104 269 273 275 280 281 284 289
@6 (178)
    on left: 103, on right: 104
constant_expr (179)
    on left: 105, on right: 11 124 133 135 179 180 189 202 230 232
    254
declaration (180)
    on left: 106 107, on right: 6 264 265
declaration_specifiers (181)
    on left: 108, on right: 8 106 107
declaration_specifiers_ (182)
    on left: 109 110 111 112 113 114, on right: 108 110 112 114
init_declarator_list (183)
    on left: 115 116, on right: 107 116
init_declarator (184)
    on left: 117 118, on right: 115 116
designation_opt (185)
    on left: 119 120, on right: 241 242
designation (186)
    on left: 121, on right: 120
designator_list (187)
    on left: 122 123, on right: 121 123
designator (188)
    on left: 124 125, on right: 122 123
storage_class_specifier (189)
    on left: 126 127 128 129 130, on right: 109 110
function_specifier (190)
    on left: 131, on right: 113 114
Interrupt_storage (191)
    on left: 132 133, on right: 21
type_specifier (192)
    on left: 134 135, on right: 111 112 213 214
type_specifier2 (193)
    on left: 136 137 138 139 140 141 142 143 144 145 146 147 148 149
    150 151 152 153 154 155 156 157 158, on right: 134 135
sfr_reg_bit (194)
    on left: 159 160, on right: 158
sfr_attributes (195)
    on left: 161 162 163 164, on right: 160
struct_or_union_specifier (196)
    on left: 166 167, on right: 155
@7 (197)
    on left: 165, on right: 166
struct_or_union (198)
    on left: 168 169, on right: 166 167
opt_stag (199)
    on left: 170 171, on right: 166
stag (200)
    on left: 172, on right: 167 170
struct_declaration_list (201)
    on left: 173 174, on right: 166 174
struct_declaration (202)
    on left: 175, on right: 173 174
struct_declarator_list (203)
    on left: 176 177, on right: 175 177
struct_declarator (204)
    on left: 178 179 180 181, on right: 176 177
enum_specifier (205)
    on left: 182 183 184, on right: 156
enumerator_list (206)
    on left: 185 186 187, on right: 182 183 186 187
enumerator (207)
    on left: 188, on right: 185 187
opt_assign_expr (208)
    on left: 189 190, on right: 188
declarator (209)
    on left: 191 192, on right: 117 118 178 180 200 221
declarator3 (210)
    on left: 193 194, on right: 191 192 201 202
function_declarator (211)
    on left: 195 196, on right: 7 8
declarator2_function_attributes (212)
    on left: 197 198, on right: 193 195 196
declarator2 (213)
    on left: 199 200 201 202, on right: 194 203 205 206
function_declarator2 (214)
    on left: 203 205 206, on right: 197 198
@8 (215)
    on left: 204, on right: 205
pointer (216)
    on left: 207 208 209 210, on right: 192 196 209 210 225 227
unqualified_pointer (217)
    on left: 211, on right: 207 208 209 210
type_specifier_list (218)
    on left: 212, on right: 175 208 210 221 223 224
type_specifier_list_ (219)
    on left: 213 214, on right: 212 214
identifier_list (220)
    on left: 215 216, on right: 206 216
parameter_type_list (221)
    on left: 217 218, on right: 205 234 237
parameter_list (222)
    on left: 219 220, on right: 217 218 220
parameter_declaration (223)
    on left: 221 222, on right: 219 220
type_name (224)
    on left: 223 224, on right: 46 55 222
abstract_declarator (225)
    on left: 225 226 227, on right: 224 228
abstract_declarator2 (226)
    on left: 228 229 230 231 232 233 234 235 237, on right: 226 227
    231 232 235 237
@9 (227)
    on left: 236, on right: 237
initializer (228)
    on left: 238 239 240, on right: 118 241 242
initializer_list (229)
    on left: 241 242, on right: 239 240 242
statement (230)
    on left: 243 244 245 246 247 248 249 250, on right: 252 266 267
    270 273 275 280 281 282
critical (231)
    on left: 251, on right: 252
critical_statement (232)
    on left: 252, on right: 249
labeled_statement (233)
    on left: 253 254 256, on right: 243
@10 (234)
    on left: 255, on right: 256
start_block (235)
    on left: 257, on right: 259 260 261 262
end_block (236)
    on left: 258, on right: 259 260 261 262
compound_statement (237)
    on left: 259 260 261 262 263, on right: 22 23 244
declaration_list (238)
    on left: 264 265, on right: 23 261 262 265
statement_list (239)
    on left: 266 267, on right: 260 262 267
expression_statement (240)
    on left: 268 269, on right: 245
else_statement (241)
    on left: 270 271, on right: 273
selection_statement (242)
    on left: 273 275, on right: 246
@11 (243)
    on left: 272, on right: 273
@12 (244)
    on left: 274, on right: 275
while (245)
    on left: 276, on right: 280
do (246)
    on left: 277, on right: 281
for (247)
    on left: 278, on right: 282
iteration_statement (248)
    on left: 280 281 282, on right: 247
@13 (249)
    on left: 279, on right: 280
expr_opt (250)
    on left: 283 284, on right: 282
jump_statement (251)
    on left: 285 286 287 288 289, on right: 248
identifier (252)
    on left: 290, on right: 24 34 36 125 172 183 184 188 199 215 216
    253 285


state 0

    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    INLINE	shift, and go to state 33
    RESTRICT	shift, and go to state 34
    '(' 	shift, and go to state 35
    '*' 	shift, and go to state 36

    $default	reduce using rule 1 (file)

    file	go to state 432
    program	go to state 37
    external_definition	go to state 38
    function_definition	go to state 39
    declaration	go to state 40
    declaration_specifiers	go to state 41
    declaration_specifiers_	go to state 42
    storage_class_specifier	go to state 43
    function_specifier	go to state 44
    type_specifier	go to state 45
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    declarator3	go to state 52
    function_declarator	go to state 53
    declarator2_function_attributes	go to state 54
    declarator2	go to state 55
    function_declarator2	go to state 56
    pointer	go to state 57
    unqualified_pointer	go to state 58
    identifier	go to state 59



state 1

    identifier  ->  IDENTIFIER .   (rule 290)

    $default	reduce using rule 290 (identifier)



state 2

    type_specifier2  ->  TYPE_NAME .   (rule 157)

    $default	reduce using rule 157 (type_specifier2)



state 3

    storage_class_specifier  ->  TYPEDEF .   (rule 126)

    $default	reduce using rule 126 (storage_class_specifier)



state 4

    storage_class_specifier  ->  EXTERN .   (rule 127)

    $default	reduce using rule 127 (storage_class_specifier)



state 5

    storage_class_specifier  ->  STATIC .   (rule 128)

    $default	reduce using rule 128 (storage_class_specifier)



state 6

    storage_class_specifier  ->  AUTO .   (rule 129)

    $default	reduce using rule 129 (storage_class_specifier)



state 7

    storage_class_specifier  ->  REGISTER .   (rule 130)

    $default	reduce using rule 130 (storage_class_specifier)



state 8

    type_specifier2  ->  CODE .   (rule 149)

    $default	reduce using rule 149 (type_specifier2)



state 9

    type_specifier2  ->  EEPROM .   (rule 150)

    $default	reduce using rule 150 (type_specifier2)



state 10

    sfr_attributes  ->  SFR .   (rule 161)
    sfr_attributes  ->  SFR . BANKED   (rule 162)

    BANKED	shift, and go to state 60

    $default	reduce using rule 161 (sfr_attributes)



state 11

    sfr_attributes  ->  SFR16 .   (rule 163)

    $default	reduce using rule 163 (sfr_attributes)



state 12

    sfr_attributes  ->  SFR32 .   (rule 164)

    $default	reduce using rule 164 (sfr_attributes)



state 13

    sfr_reg_bit  ->  SBIT .   (rule 159)

    $default	reduce using rule 159 (sfr_reg_bit)



state 14

    type_specifier2  ->  XDATA .   (rule 148)

    $default	reduce using rule 148 (type_specifier2)



state 15

    type_specifier2  ->  DATA .   (rule 151)

    $default	reduce using rule 151 (type_specifier2)



state 16

    type_specifier2  ->  IDATA .   (rule 152)

    $default	reduce using rule 152 (type_specifier2)



state 17

    type_specifier2  ->  PDATA .   (rule 153)

    $default	reduce using rule 153 (type_specifier2)



state 18

    type_specifier2  ->  CHAR .   (rule 136)

    $default	reduce using rule 136 (type_specifier2)



state 19

    type_specifier2  ->  SHORT .   (rule 137)

    $default	reduce using rule 137 (type_specifier2)



state 20

    type_specifier2  ->  INT .   (rule 138)

    $default	reduce using rule 138 (type_specifier2)



state 21

    type_specifier2  ->  LONG .   (rule 139)

    $default	reduce using rule 139 (type_specifier2)



state 22

    type_specifier2  ->  SIGNED .   (rule 140)

    $default	reduce using rule 140 (type_specifier2)



state 23

    type_specifier2  ->  UNSIGNED .   (rule 141)

    $default	reduce using rule 141 (type_specifier2)



state 24

    type_specifier2  ->  FLOAT .   (rule 146)

    $default	reduce using rule 146 (type_specifier2)



state 25

    type_specifier2  ->  FIXED16X16 .   (rule 147)

    $default	reduce using rule 147 (type_specifier2)



state 26

    type_specifier2  ->  CONST .   (rule 143)

    $default	reduce using rule 143 (type_specifier2)



state 27

    type_specifier2  ->  VOLATILE .   (rule 144)

    $default	reduce using rule 144 (type_specifier2)



state 28

    type_specifier2  ->  VOID .   (rule 142)

    $default	reduce using rule 142 (type_specifier2)



state 29

    type_specifier2  ->  BIT .   (rule 154)

    $default	reduce using rule 154 (type_specifier2)



state 30

    struct_or_union  ->  STRUCT .   (rule 168)

    $default	reduce using rule 168 (struct_or_union)



state 31

    struct_or_union  ->  UNION .   (rule 169)

    $default	reduce using rule 169 (struct_or_union)



state 32

    enum_specifier  ->  ENUM . '{' enumerator_list '}'   (rule 182)
    enum_specifier  ->  ENUM . identifier '{' enumerator_list '}'   (rule 183)
    enum_specifier  ->  ENUM . identifier   (rule 184)

    IDENTIFIER	shift, and go to state 1
    '{' 	shift, and go to state 61

    identifier	go to state 62



state 33

    function_specifier  ->  INLINE .   (rule 131)

    $default	reduce using rule 131 (function_specifier)



state 34

    type_specifier2  ->  RESTRICT .   (rule 145)

    $default	reduce using rule 145 (type_specifier2)



state 35

    declarator2  ->  '(' . declarator ')'   (rule 200)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 35
    '*' 	shift, and go to state 36

    declarator	go to state 63
    declarator3	go to state 64
    declarator2_function_attributes	go to state 65
    declarator2	go to state 55
    function_declarator2	go to state 56
    pointer	go to state 66
    unqualified_pointer	go to state 58
    identifier	go to state 59



state 36

    unqualified_pointer  ->  '*' .   (rule 211)

    $default	reduce using rule 211 (unqualified_pointer)



state 37

    file  ->  program .   (rule 2)
    program  ->  program . external_definition   (rule 4)

    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    INLINE	shift, and go to state 33
    RESTRICT	shift, and go to state 34
    '(' 	shift, and go to state 35
    '*' 	shift, and go to state 36

    $default	reduce using rule 2 (file)

    external_definition	go to state 67
    function_definition	go to state 39
    declaration	go to state 40
    declaration_specifiers	go to state 41
    declaration_specifiers_	go to state 42
    storage_class_specifier	go to state 43
    function_specifier	go to state 44
    type_specifier	go to state 45
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    declarator3	go to state 52
    function_declarator	go to state 53
    declarator2_function_attributes	go to state 54
    declarator2	go to state 55
    function_declarator2	go to state 56
    pointer	go to state 57
    unqualified_pointer	go to state 58
    identifier	go to state 59



state 38

    program  ->  external_definition .   (rule 3)

    $default	reduce using rule 3 (program)



state 39

    external_definition  ->  function_definition .   (rule 5)

    $default	reduce using rule 5 (external_definition)



state 40

    external_definition  ->  declaration .   (rule 6)

    $default	reduce using rule 6 (external_definition)



state 41

    function_definition  ->  declaration_specifiers . function_declarator function_body   (rule 8)
    declaration  ->  declaration_specifiers . ';'   (rule 106)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 107)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 35
    '*' 	shift, and go to state 36
    ';' 	shift, and go to state 68

    init_declarator_list	go to state 69
    init_declarator	go to state 70
    declarator	go to state 71
    declarator3	go to state 64
    function_declarator	go to state 72
    declarator2_function_attributes	go to state 54
    declarator2	go to state 55
    function_declarator2	go to state 56
    pointer	go to state 73
    unqualified_pointer	go to state 58
    identifier	go to state 59



state 42

    declaration_specifiers  ->  declaration_specifiers_ .   (rule 108)

    $default	reduce using rule 108 (declaration_specifiers)



state 43

    declaration_specifiers_  ->  storage_class_specifier .   (rule 109)
    declaration_specifiers_  ->  storage_class_specifier . declaration_specifiers_   (rule 110)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    INLINE	shift, and go to state 33
    RESTRICT	shift, and go to state 34

    $default	reduce using rule 109 (declaration_specifiers_)

    declaration_specifiers_	go to state 74
    storage_class_specifier	go to state 43
    function_specifier	go to state 44
    type_specifier	go to state 45
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51



state 44

    declaration_specifiers_  ->  function_specifier .   (rule 113)
    declaration_specifiers_  ->  function_specifier . declaration_specifiers_   (rule 114)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    INLINE	shift, and go to state 33
    RESTRICT	shift, and go to state 34

    $default	reduce using rule 113 (declaration_specifiers_)

    declaration_specifiers_	go to state 75
    storage_class_specifier	go to state 43
    function_specifier	go to state 44
    type_specifier	go to state 45
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51



state 45

    declaration_specifiers_  ->  type_specifier .   (rule 111)
    declaration_specifiers_  ->  type_specifier . declaration_specifiers_   (rule 112)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    INLINE	shift, and go to state 33
    RESTRICT	shift, and go to state 34

    $default	reduce using rule 111 (declaration_specifiers_)

    declaration_specifiers_	go to state 76
    storage_class_specifier	go to state 43
    function_specifier	go to state 44
    type_specifier	go to state 45
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51



state 46

    type_specifier  ->  type_specifier2 .   (rule 134)
    type_specifier  ->  type_specifier2 . AT constant_expr   (rule 135)

    AT  	shift, and go to state 77

    $default	reduce using rule 134 (type_specifier)



state 47

    type_specifier2  ->  sfr_reg_bit .   (rule 158)

    $default	reduce using rule 158 (type_specifier2)



state 48

    sfr_reg_bit  ->  sfr_attributes .   (rule 160)

    $default	reduce using rule 160 (sfr_reg_bit)



state 49

    type_specifier2  ->  struct_or_union_specifier .   (rule 155)

    $default	reduce using rule 155 (type_specifier2)



state 50

    struct_or_union_specifier  ->  struct_or_union . opt_stag @7 '{' struct_declaration_list '}'   (rule 166)
    struct_or_union_specifier  ->  struct_or_union . stag   (rule 167)

    IDENTIFIER	shift, and go to state 1

    $default	reduce using rule 171 (opt_stag)

    opt_stag	go to state 78
    stag	go to state 79
    identifier	go to state 80



state 51

    type_specifier2  ->  enum_specifier .   (rule 156)

    $default	reduce using rule 156 (type_specifier2)



state 52

    declarator2  ->  declarator3 . '[' ']'   (rule 201)
    declarator2  ->  declarator3 . '[' constant_expr ']'   (rule 202)

    '[' 	shift, and go to state 81



state 53

    function_definition  ->  function_declarator . function_body   (rule 7)

    error	shift, and go to state 82
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    INLINE	shift, and go to state 33
    RESTRICT	shift, and go to state 34
    '{' 	shift, and go to state 83

    function_body	go to state 84
    declaration	go to state 85
    declaration_specifiers	go to state 86
    declaration_specifiers_	go to state 42
    storage_class_specifier	go to state 43
    function_specifier	go to state 44
    type_specifier	go to state 45
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    start_block	go to state 87
    compound_statement	go to state 88
    declaration_list	go to state 89



state 54

    declarator3  ->  declarator2_function_attributes .   (rule 193)
    function_declarator  ->  declarator2_function_attributes .   (rule 195)

    '[' 	reduce using rule 193 (declarator3)
    ',' 	reduce using rule 193 (declarator3)
    '=' 	reduce using rule 193 (declarator3)
    ';' 	reduce using rule 193 (declarator3)
    $default	reduce using rule 195 (function_declarator)



state 55

    declarator3  ->  declarator2 .   (rule 194)
    function_declarator2  ->  declarator2 . '(' ')'   (rule 203)
    function_declarator2  ->  declarator2 . '(' @8 parameter_type_list ')'   (rule 205)
    function_declarator2  ->  declarator2 . '(' identifier_list ')'   (rule 206)

    '(' 	shift, and go to state 90

    $default	reduce using rule 194 (declarator3)



state 56

    declarator2_function_attributes  ->  function_declarator2 .   (rule 197)
    declarator2_function_attributes  ->  function_declarator2 . function_attribute   (rule 198)

    INTERRUPT	shift, and go to state 91
    REENTRANT	shift, and go to state 92
    USING	shift, and go to state 93
    CRITICAL	shift, and go to state 94
    NONBANKED	shift, and go to state 95
    BANKED	shift, and go to state 96
    SHADOWREGS	shift, and go to state 97
    WPARAM	shift, and go to state 98
    NAKED	shift, and go to state 99
    JAVANATIVE	shift, and go to state 100
    OVERLAY	shift, and go to state 101

    $default	reduce using rule 197 (declarator2_function_attributes)

    function_attribute	go to state 102
    function_attributes	go to state 103
    Interrupt_storage	go to state 104



state 57

    function_declarator  ->  pointer . declarator2_function_attributes   (rule 196)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 35

    declarator3	go to state 52
    declarator2_function_attributes	go to state 105
    declarator2	go to state 55
    function_declarator2	go to state 56
    identifier	go to state 59



state 58

    pointer  ->  unqualified_pointer .   (rule 207)
    pointer  ->  unqualified_pointer . type_specifier_list   (rule 208)
    pointer  ->  unqualified_pointer . pointer   (rule 209)
    pointer  ->  unqualified_pointer . type_specifier_list pointer   (rule 210)

    TYPE_NAME	shift, and go to state 2
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    RESTRICT	shift, and go to state 34
    '*' 	shift, and go to state 36

    $default	reduce using rule 207 (pointer)

    type_specifier	go to state 106
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    pointer	go to state 107
    unqualified_pointer	go to state 58
    type_specifier_list	go to state 108
    type_specifier_list_	go to state 109



state 59

    declarator2  ->  identifier .   (rule 199)

    $default	reduce using rule 199 (declarator2)



state 60

    sfr_attributes  ->  SFR BANKED .   (rule 162)

    $default	reduce using rule 162 (sfr_attributes)



state 61

    enum_specifier  ->  ENUM '{' . enumerator_list '}'   (rule 182)

    IDENTIFIER	shift, and go to state 1

    enumerator_list	go to state 110
    enumerator	go to state 111
    identifier	go to state 112



state 62

    enum_specifier  ->  ENUM identifier . '{' enumerator_list '}'   (rule 183)
    enum_specifier  ->  ENUM identifier .   (rule 184)

    '{' 	shift, and go to state 113

    $default	reduce using rule 184 (enum_specifier)



state 63

    declarator2  ->  '(' declarator . ')'   (rule 200)

    ')' 	shift, and go to state 114



state 64

    declarator  ->  declarator3 .   (rule 191)
    declarator2  ->  declarator3 . '[' ']'   (rule 201)
    declarator2  ->  declarator3 . '[' constant_expr ']'   (rule 202)

    '[' 	shift, and go to state 81

    $default	reduce using rule 191 (declarator)



state 65

    declarator3  ->  declarator2_function_attributes .   (rule 193)

    $default	reduce using rule 193 (declarator3)



state 66

    declarator  ->  pointer . declarator3   (rule 192)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 35

    declarator3	go to state 115
    declarator2_function_attributes	go to state 65
    declarator2	go to state 55
    function_declarator2	go to state 56
    identifier	go to state 59



state 67

    program  ->  program external_definition .   (rule 4)

    $default	reduce using rule 4 (program)



state 68

    declaration  ->  declaration_specifiers ';' .   (rule 106)

    $default	reduce using rule 106 (declaration)



state 69

    declaration  ->  declaration_specifiers init_declarator_list . ';'   (rule 107)
    init_declarator_list  ->  init_declarator_list . ',' init_declarator   (rule 116)

    ',' 	shift, and go to state 116
    ';' 	shift, and go to state 117



state 70

    init_declarator_list  ->  init_declarator .   (rule 115)

    $default	reduce using rule 115 (init_declarator_list)



state 71

    init_declarator  ->  declarator .   (rule 117)
    init_declarator  ->  declarator . '=' initializer   (rule 118)

    '=' 	shift, and go to state 118

    $default	reduce using rule 117 (init_declarator)



state 72

    function_definition  ->  declaration_specifiers function_declarator . function_body   (rule 8)

    error	shift, and go to state 82
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    INLINE	shift, and go to state 33
    RESTRICT	shift, and go to state 34
    '{' 	shift, and go to state 83

    function_body	go to state 119
    declaration	go to state 85
    declaration_specifiers	go to state 86
    declaration_specifiers_	go to state 42
    storage_class_specifier	go to state 43
    function_specifier	go to state 44
    type_specifier	go to state 45
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    start_block	go to state 87
    compound_statement	go to state 88
    declaration_list	go to state 89



state 73

    declarator  ->  pointer . declarator3   (rule 192)
    function_declarator  ->  pointer . declarator2_function_attributes   (rule 196)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 35

    declarator3	go to state 115
    declarator2_function_attributes	go to state 105
    declarator2	go to state 55
    function_declarator2	go to state 56
    identifier	go to state 59



state 74

    declaration_specifiers_  ->  storage_class_specifier declaration_specifiers_ .   (rule 110)

    $default	reduce using rule 110 (declaration_specifiers_)



state 75

    declaration_specifiers_  ->  function_specifier declaration_specifiers_ .   (rule 114)

    $default	reduce using rule 114 (declaration_specifiers_)



state 76

    declaration_specifiers_  ->  type_specifier declaration_specifiers_ .   (rule 112)

    $default	reduce using rule 112 (declaration_specifiers_)



state 77

    type_specifier  ->  type_specifier2 AT . constant_expr   (rule 135)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 149
    constant_expr	go to state 150
    identifier	go to state 151



state 78

    struct_or_union_specifier  ->  struct_or_union opt_stag . @7 '{' struct_declaration_list '}'   (rule 166)

    $default	reduce using rule 165 (@7)

    @7  	go to state 152



state 79

    struct_or_union_specifier  ->  struct_or_union stag .   (rule 167)
    opt_stag  ->  stag .   (rule 170)

    '{' 	reduce using rule 170 (opt_stag)
    $default	reduce using rule 167 (struct_or_union_specifier)



state 80

    stag  ->  identifier .   (rule 172)

    $default	reduce using rule 172 (stag)



state 81

    declarator2  ->  declarator3 '[' . ']'   (rule 201)
    declarator2  ->  declarator3 '[' . constant_expr ']'   (rule 202)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    ']' 	shift, and go to state 153
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 149
    constant_expr	go to state 154
    identifier	go to state 151



state 82

    compound_statement  ->  error . ';'   (rule 263)

    ';' 	shift, and go to state 155



state 83

    start_block  ->  '{' .   (rule 257)

    $default	reduce using rule 257 (start_block)



state 84

    function_definition  ->  function_declarator function_body .   (rule 7)

    $default	reduce using rule 7 (function_definition)



state 85

    declaration_list  ->  declaration .   (rule 264)

    $default	reduce using rule 264 (declaration_list)



state 86

    declaration  ->  declaration_specifiers . ';'   (rule 106)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 107)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 35
    '*' 	shift, and go to state 36
    ';' 	shift, and go to state 68

    init_declarator_list	go to state 69
    init_declarator	go to state 70
    declarator	go to state 71
    declarator3	go to state 64
    declarator2_function_attributes	go to state 65
    declarator2	go to state 55
    function_declarator2	go to state 56
    pointer	go to state 66
    unqualified_pointer	go to state 58
    identifier	go to state 59



state 87

    compound_statement  ->  start_block . end_block   (rule 259)
    compound_statement  ->  start_block . statement_list end_block   (rule 260)
    compound_statement  ->  start_block . declaration_list end_block   (rule 261)
    compound_statement  ->  start_block . declaration_list statement_list end_block   (rule 262)

    error	shift, and go to state 82
    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CRITICAL	shift, and go to state 156
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    CASE	shift, and go to state 157
    DEFAULT	shift, and go to state 158
    IF  	shift, and go to state 159
    SWITCH	shift, and go to state 160
    WHILE	shift, and go to state 161
    DO  	shift, and go to state 162
    FOR 	shift, and go to state 163
    GOTO	shift, and go to state 164
    CONTINUE	shift, and go to state 165
    BREAK	shift, and go to state 166
    RETURN	shift, and go to state 167
    INLINEASM	shift, and go to state 168
    INLINE	shift, and go to state 33
    RESTRICT	shift, and go to state 34
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    ';' 	shift, and go to state 169
    '{' 	shift, and go to state 83
    '}' 	shift, and go to state 170

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 174
    declaration	go to state 85
    declaration_specifiers	go to state 86
    declaration_specifiers_	go to state 42
    storage_class_specifier	go to state 43
    function_specifier	go to state 44
    type_specifier	go to state 45
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    statement	go to state 175
    critical	go to state 176
    critical_statement	go to state 177
    labeled_statement	go to state 178
    start_block	go to state 87
    end_block	go to state 179
    compound_statement	go to state 180
    declaration_list	go to state 181
    statement_list	go to state 182
    expression_statement	go to state 183
    selection_statement	go to state 184
    while	go to state 185
    do  	go to state 186
    for 	go to state 187
    iteration_statement	go to state 188
    jump_statement	go to state 189
    identifier	go to state 190



state 88

    function_body  ->  compound_statement .   (rule 22)

    $default	reduce using rule 22 (function_body)



state 89

    function_body  ->  declaration_list . compound_statement   (rule 23)
    declaration_list  ->  declaration_list . declaration   (rule 265)

    error	shift, and go to state 82
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    INLINE	shift, and go to state 33
    RESTRICT	shift, and go to state 34
    '{' 	shift, and go to state 83

    declaration	go to state 191
    declaration_specifiers	go to state 86
    declaration_specifiers_	go to state 42
    storage_class_specifier	go to state 43
    function_specifier	go to state 44
    type_specifier	go to state 45
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    start_block	go to state 87
    compound_statement	go to state 192



state 90

    function_declarator2  ->  declarator2 '(' . ')'   (rule 203)
    function_declarator2  ->  declarator2 '(' . @8 parameter_type_list ')'   (rule 205)
    function_declarator2  ->  declarator2 '(' . identifier_list ')'   (rule 206)

    IDENTIFIER	shift, and go to state 1
    ')' 	shift, and go to state 193

    $default	reduce using rule 204 (@8)

    @8  	go to state 194
    identifier_list	go to state 195
    identifier	go to state 196



state 91

    Interrupt_storage  ->  INTERRUPT .   (rule 132)
    Interrupt_storage  ->  INTERRUPT . constant_expr   (rule 133)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    $default	reduce using rule 132 (Interrupt_storage)

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 149
    constant_expr	go to state 197
    identifier	go to state 151



state 92

    function_attributes  ->  REENTRANT .   (rule 12)

    $default	reduce using rule 12 (function_attributes)



state 93

    function_attributes  ->  USING . constant_expr   (rule 11)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 149
    constant_expr	go to state 198
    identifier	go to state 151



state 94

    function_attributes  ->  CRITICAL .   (rule 13)

    $default	reduce using rule 13 (function_attributes)



state 95

    function_attributes  ->  NONBANKED .   (rule 17)

    $default	reduce using rule 17 (function_attributes)



state 96

    function_attributes  ->  BANKED .   (rule 20)

    $default	reduce using rule 20 (function_attributes)



state 97

    function_attributes  ->  SHADOWREGS .   (rule 18)

    $default	reduce using rule 18 (function_attributes)



state 98

    function_attributes  ->  WPARAM .   (rule 19)

    $default	reduce using rule 19 (function_attributes)



state 99

    function_attributes  ->  NAKED .   (rule 14)

    $default	reduce using rule 14 (function_attributes)



state 100

    function_attributes  ->  JAVANATIVE .   (rule 15)

    $default	reduce using rule 15 (function_attributes)



state 101

    function_attributes  ->  OVERLAY .   (rule 16)

    $default	reduce using rule 16 (function_attributes)



state 102

    declarator2_function_attributes  ->  function_declarator2 function_attribute .   (rule 198)

    $default	reduce using rule 198 (declarator2_function_attributes)



state 103

    function_attribute  ->  function_attributes .   (rule 9)
    function_attribute  ->  function_attributes . function_attribute   (rule 10)

    INTERRUPT	shift, and go to state 91
    REENTRANT	shift, and go to state 92
    USING	shift, and go to state 93
    CRITICAL	shift, and go to state 94
    NONBANKED	shift, and go to state 95
    BANKED	shift, and go to state 96
    SHADOWREGS	shift, and go to state 97
    WPARAM	shift, and go to state 98
    NAKED	shift, and go to state 99
    JAVANATIVE	shift, and go to state 100
    OVERLAY	shift, and go to state 101

    $default	reduce using rule 9 (function_attribute)

    function_attribute	go to state 199
    function_attributes	go to state 103
    Interrupt_storage	go to state 104



state 104

    function_attributes  ->  Interrupt_storage .   (rule 21)

    $default	reduce using rule 21 (function_attributes)



state 105

    declarator3  ->  declarator2_function_attributes .   (rule 193)
    function_declarator  ->  pointer declarator2_function_attributes .   (rule 196)

    '[' 	reduce using rule 193 (declarator3)
    ',' 	reduce using rule 193 (declarator3)
    '=' 	reduce using rule 193 (declarator3)
    ';' 	reduce using rule 193 (declarator3)
    $default	reduce using rule 196 (function_declarator)



state 106

    type_specifier_list_  ->  type_specifier .   (rule 213)

    $default	reduce using rule 213 (type_specifier_list_)



state 107

    pointer  ->  unqualified_pointer pointer .   (rule 209)

    $default	reduce using rule 209 (pointer)



state 108

    pointer  ->  unqualified_pointer type_specifier_list .   (rule 208)
    pointer  ->  unqualified_pointer type_specifier_list . pointer   (rule 210)

    '*' 	shift, and go to state 36

    $default	reduce using rule 208 (pointer)

    pointer	go to state 200
    unqualified_pointer	go to state 58



state 109

    type_specifier_list  ->  type_specifier_list_ .   (rule 212)
    type_specifier_list_  ->  type_specifier_list_ . type_specifier   (rule 214)

    TYPE_NAME	shift, and go to state 2
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    RESTRICT	shift, and go to state 34

    $default	reduce using rule 212 (type_specifier_list)

    type_specifier	go to state 201
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51



state 110

    enum_specifier  ->  ENUM '{' enumerator_list . '}'   (rule 182)
    enumerator_list  ->  enumerator_list . ','   (rule 186)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 187)

    ',' 	shift, and go to state 202
    '}' 	shift, and go to state 203



state 111

    enumerator_list  ->  enumerator .   (rule 185)

    $default	reduce using rule 185 (enumerator_list)



state 112

    enumerator  ->  identifier . opt_assign_expr   (rule 188)

    '=' 	shift, and go to state 204

    $default	reduce using rule 190 (opt_assign_expr)

    opt_assign_expr	go to state 205



state 113

    enum_specifier  ->  ENUM identifier '{' . enumerator_list '}'   (rule 183)

    IDENTIFIER	shift, and go to state 1

    enumerator_list	go to state 206
    enumerator	go to state 111
    identifier	go to state 112



state 114

    declarator2  ->  '(' declarator ')' .   (rule 200)

    $default	reduce using rule 200 (declarator2)



state 115

    declarator  ->  pointer declarator3 .   (rule 192)
    declarator2  ->  declarator3 . '[' ']'   (rule 201)
    declarator2  ->  declarator3 . '[' constant_expr ']'   (rule 202)

    '[' 	shift, and go to state 81

    $default	reduce using rule 192 (declarator)



state 116

    init_declarator_list  ->  init_declarator_list ',' . init_declarator   (rule 116)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 35
    '*' 	shift, and go to state 36

    init_declarator	go to state 207
    declarator	go to state 71
    declarator3	go to state 64
    declarator2_function_attributes	go to state 65
    declarator2	go to state 55
    function_declarator2	go to state 56
    pointer	go to state 66
    unqualified_pointer	go to state 58
    identifier	go to state 59



state 117

    declaration  ->  declaration_specifiers init_declarator_list ';' .   (rule 107)

    $default	reduce using rule 107 (declaration)



state 118

    init_declarator  ->  declarator '=' . initializer   (rule 118)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    '{' 	shift, and go to state 208

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 209
    initializer	go to state 210
    identifier	go to state 151



state 119

    function_definition  ->  declaration_specifiers function_declarator function_body .   (rule 8)

    $default	reduce using rule 8 (function_definition)



state 120

    primary_expr  ->  CONSTANT .   (rule 25)

    $default	reduce using rule 25 (primary_expr)



state 121

    string_literal  ->  STRING_LITERAL .   (rule 28)

    $default	reduce using rule 28 (string_literal)



state 122

    unary_expr  ->  SIZEOF . unary_expr   (rule 45)
    unary_expr  ->  SIZEOF . '(' type_name ')'   (rule 46)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 211
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 212
    unary_operator	go to state 137
    identifier	go to state 151



state 123

    unary_expr  ->  TYPEOF . unary_expr   (rule 47)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 213
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 214
    unary_operator	go to state 137
    identifier	go to state 151



state 124

    unary_expr  ->  INC_OP . unary_expr   (rule 42)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 213
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 215
    unary_operator	go to state 137
    identifier	go to state 151



state 125

    unary_expr  ->  DEC_OP . unary_expr   (rule 43)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 213
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 216
    unary_operator	go to state 137
    identifier	go to state 151



state 126

    primary_expr  ->  '(' . expr ')'   (rule 27)
    cast_expr  ->  '(' . type_name ')' cast_expr   (rule 55)

    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    RESTRICT	shift, and go to state 34
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 217
    type_specifier	go to state 106
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    type_specifier_list	go to state 218
    type_specifier_list_	go to state 109
    type_name	go to state 219
    identifier	go to state 151



state 127

    unary_operator  ->  '&' .   (rule 48)

    $default	reduce using rule 48 (unary_operator)



state 128

    unary_operator  ->  '*' .   (rule 49)

    $default	reduce using rule 49 (unary_operator)



state 129

    unary_operator  ->  '+' .   (rule 50)

    $default	reduce using rule 50 (unary_operator)



state 130

    unary_operator  ->  '-' .   (rule 51)

    $default	reduce using rule 51 (unary_operator)



state 131

    unary_operator  ->  '~' .   (rule 52)

    $default	reduce using rule 52 (unary_operator)



state 132

    unary_operator  ->  '!' .   (rule 53)

    $default	reduce using rule 53 (unary_operator)



state 133

    postfix_expr  ->  primary_expr .   (rule 29)

    $default	reduce using rule 29 (postfix_expr)



state 134

    primary_expr  ->  string_literal .   (rule 26)

    $default	reduce using rule 26 (primary_expr)



state 135

    postfix_expr  ->  postfix_expr . '[' expr ']'   (rule 30)
    postfix_expr  ->  postfix_expr . '(' ')'   (rule 31)
    postfix_expr  ->  postfix_expr . '(' argument_expr_list ')'   (rule 32)
    postfix_expr  ->  postfix_expr . '.' @1 identifier   (rule 34)
    postfix_expr  ->  postfix_expr . PTR_OP @2 identifier   (rule 36)
    postfix_expr  ->  postfix_expr . INC_OP   (rule 37)
    postfix_expr  ->  postfix_expr . DEC_OP   (rule 38)
    unary_expr  ->  postfix_expr .   (rule 41)

    PTR_OP	shift, and go to state 220
    INC_OP	shift, and go to state 221
    DEC_OP	shift, and go to state 222
    '(' 	shift, and go to state 223
    '[' 	shift, and go to state 224
    '.' 	shift, and go to state 225

    '(' 	[reduce using rule 41 (unary_expr)]
    '[' 	[reduce using rule 41 (unary_expr)]
    $default	reduce using rule 41 (unary_expr)



state 136

    cast_expr  ->  unary_expr .   (rule 54)

    $default	reduce using rule 54 (cast_expr)



state 137

    unary_expr  ->  unary_operator . cast_expr   (rule 44)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 226
    identifier	go to state 151



state 138

    multiplicative_expr  ->  cast_expr .   (rule 56)

    $default	reduce using rule 56 (multiplicative_expr)



state 139

    multiplicative_expr  ->  multiplicative_expr . '*' cast_expr   (rule 57)
    multiplicative_expr  ->  multiplicative_expr . '/' cast_expr   (rule 58)
    multiplicative_expr  ->  multiplicative_expr . '%' cast_expr   (rule 59)
    additive_expr  ->  multiplicative_expr .   (rule 60)

    '*' 	shift, and go to state 227
    '/' 	shift, and go to state 228
    '%' 	shift, and go to state 229

    '*' 	[reduce using rule 60 (additive_expr)]
    $default	reduce using rule 60 (additive_expr)



state 140

    additive_expr  ->  additive_expr . '+' multiplicative_expr   (rule 61)
    additive_expr  ->  additive_expr . '-' multiplicative_expr   (rule 62)
    shift_expr  ->  additive_expr .   (rule 63)

    '+' 	shift, and go to state 230
    '-' 	shift, and go to state 231

    $default	reduce using rule 63 (shift_expr)



state 141

    shift_expr  ->  shift_expr . LEFT_OP additive_expr   (rule 64)
    shift_expr  ->  shift_expr . RIGHT_OP additive_expr   (rule 65)
    relational_expr  ->  shift_expr .   (rule 66)

    LEFT_OP	shift, and go to state 232
    RIGHT_OP	shift, and go to state 233

    $default	reduce using rule 66 (relational_expr)



state 142

    relational_expr  ->  relational_expr . '<' shift_expr   (rule 67)
    relational_expr  ->  relational_expr . '>' shift_expr   (rule 68)
    relational_expr  ->  relational_expr . LE_OP shift_expr   (rule 69)
    relational_expr  ->  relational_expr . GE_OP shift_expr   (rule 70)
    equality_expr  ->  relational_expr .   (rule 71)

    LE_OP	shift, and go to state 234
    GE_OP	shift, and go to state 235
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 237

    $default	reduce using rule 71 (equality_expr)



state 143

    equality_expr  ->  equality_expr . EQ_OP relational_expr   (rule 72)
    equality_expr  ->  equality_expr . NE_OP relational_expr   (rule 73)
    and_expr  ->  equality_expr .   (rule 74)

    EQ_OP	shift, and go to state 238
    NE_OP	shift, and go to state 239

    $default	reduce using rule 74 (and_expr)



state 144

    and_expr  ->  and_expr . '&' equality_expr   (rule 75)
    exclusive_or_expr  ->  and_expr .   (rule 76)

    '&' 	shift, and go to state 240

    $default	reduce using rule 76 (exclusive_or_expr)



state 145

    exclusive_or_expr  ->  exclusive_or_expr . '^' and_expr   (rule 77)
    inclusive_or_expr  ->  exclusive_or_expr .   (rule 78)

    '^' 	shift, and go to state 241

    $default	reduce using rule 78 (inclusive_or_expr)



state 146

    inclusive_or_expr  ->  inclusive_or_expr . '|' exclusive_or_expr   (rule 79)
    logical_and_expr  ->  inclusive_or_expr .   (rule 80)

    '|' 	shift, and go to state 242

    $default	reduce using rule 80 (logical_and_expr)



state 147

    logical_and_expr  ->  logical_and_expr . AND_OP @3 inclusive_or_expr   (rule 82)
    logical_or_expr  ->  logical_and_expr .   (rule 83)

    AND_OP	shift, and go to state 243

    $default	reduce using rule 83 (logical_or_expr)



state 148

    logical_or_expr  ->  logical_or_expr . OR_OP @4 logical_and_expr   (rule 85)
    conditional_expr  ->  logical_or_expr .   (rule 86)
    conditional_expr  ->  logical_or_expr . '?' @5 logical_or_expr ':' conditional_expr   (rule 88)

    OR_OP	shift, and go to state 244
    '?' 	shift, and go to state 245

    $default	reduce using rule 86 (conditional_expr)



state 149

    constant_expr  ->  conditional_expr .   (rule 105)

    $default	reduce using rule 105 (constant_expr)



state 150

    type_specifier  ->  type_specifier2 AT constant_expr .   (rule 135)

    $default	reduce using rule 135 (type_specifier)



state 151

    primary_expr  ->  identifier .   (rule 24)

    $default	reduce using rule 24 (primary_expr)



state 152

    struct_or_union_specifier  ->  struct_or_union opt_stag @7 . '{' struct_declaration_list '}'   (rule 166)

    '{' 	shift, and go to state 246



state 153

    declarator2  ->  declarator3 '[' ']' .   (rule 201)

    $default	reduce using rule 201 (declarator2)



state 154

    declarator2  ->  declarator3 '[' constant_expr . ']'   (rule 202)

    ']' 	shift, and go to state 247



state 155

    compound_statement  ->  error ';' .   (rule 263)

    $default	reduce using rule 263 (compound_statement)



state 156

    critical  ->  CRITICAL .   (rule 251)

    $default	reduce using rule 251 (critical)



state 157

    labeled_statement  ->  CASE . constant_expr ':'   (rule 254)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 149
    constant_expr	go to state 248
    identifier	go to state 151



state 158

    labeled_statement  ->  DEFAULT . @10 ':'   (rule 256)

    $default	reduce using rule 255 (@10)

    @10 	go to state 249



state 159

    selection_statement  ->  IF . '(' expr ')' @11 statement else_statement   (rule 273)

    '(' 	shift, and go to state 250



state 160

    selection_statement  ->  SWITCH . '(' expr ')' @12 statement   (rule 275)

    '(' 	shift, and go to state 251



state 161

    while  ->  WHILE .   (rule 276)

    $default	reduce using rule 276 (while)



state 162

    do  ->  DO .   (rule 277)

    $default	reduce using rule 277 (do)



state 163

    for  ->  FOR .   (rule 278)

    $default	reduce using rule 278 (for)



state 164

    jump_statement  ->  GOTO . identifier ';'   (rule 285)

    IDENTIFIER	shift, and go to state 1

    identifier	go to state 252



state 165

    jump_statement  ->  CONTINUE . ';'   (rule 286)

    ';' 	shift, and go to state 253



state 166

    jump_statement  ->  BREAK . ';'   (rule 287)

    ';' 	shift, and go to state 254



state 167

    jump_statement  ->  RETURN . ';'   (rule 288)
    jump_statement  ->  RETURN . expr ';'   (rule 289)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    ';' 	shift, and go to state 255

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 256
    identifier	go to state 151



state 168

    statement  ->  INLINEASM . ';'   (rule 250)

    ';' 	shift, and go to state 257



state 169

    expression_statement  ->  ';' .   (rule 268)

    $default	reduce using rule 268 (expression_statement)



state 170

    end_block  ->  '}' .   (rule 258)

    $default	reduce using rule 258 (end_block)



state 171

    multiplicative_expr  ->  cast_expr .   (rule 56)
    assignment_expr  ->  cast_expr . assignment_operator assignment_expr   (rule 90)

    MUL_ASSIGN	shift, and go to state 258
    DIV_ASSIGN	shift, and go to state 259
    MOD_ASSIGN	shift, and go to state 260
    ADD_ASSIGN	shift, and go to state 261
    SUB_ASSIGN	shift, and go to state 262
    LEFT_ASSIGN	shift, and go to state 263
    RIGHT_ASSIGN	shift, and go to state 264
    AND_ASSIGN	shift, and go to state 265
    XOR_ASSIGN	shift, and go to state 266
    OR_ASSIGN	shift, and go to state 267
    '=' 	shift, and go to state 268

    $default	reduce using rule 56 (multiplicative_expr)

    assignment_operator	go to state 269



state 172

    assignment_expr  ->  conditional_expr .   (rule 89)

    $default	reduce using rule 89 (assignment_expr)



state 173

    expr  ->  assignment_expr .   (rule 102)

    $default	reduce using rule 102 (expr)



state 174

    expr  ->  expr . ',' @6 assignment_expr   (rule 104)
    expression_statement  ->  expr . ';'   (rule 269)

    ',' 	shift, and go to state 270
    ';' 	shift, and go to state 271



state 175

    statement_list  ->  statement .   (rule 266)

    $default	reduce using rule 266 (statement_list)



state 176

    critical_statement  ->  critical . statement   (rule 252)

    error	shift, and go to state 82
    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    CRITICAL	shift, and go to state 156
    CASE	shift, and go to state 157
    DEFAULT	shift, and go to state 158
    IF  	shift, and go to state 159
    SWITCH	shift, and go to state 160
    WHILE	shift, and go to state 161
    DO  	shift, and go to state 162
    FOR 	shift, and go to state 163
    GOTO	shift, and go to state 164
    CONTINUE	shift, and go to state 165
    BREAK	shift, and go to state 166
    RETURN	shift, and go to state 167
    INLINEASM	shift, and go to state 168
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    ';' 	shift, and go to state 169
    '{' 	shift, and go to state 83

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 174
    statement	go to state 272
    critical	go to state 176
    critical_statement	go to state 177
    labeled_statement	go to state 178
    start_block	go to state 87
    compound_statement	go to state 180
    expression_statement	go to state 183
    selection_statement	go to state 184
    while	go to state 185
    do  	go to state 186
    for 	go to state 187
    iteration_statement	go to state 188
    jump_statement	go to state 189
    identifier	go to state 190



state 177

    statement  ->  critical_statement .   (rule 249)

    $default	reduce using rule 249 (statement)



state 178

    statement  ->  labeled_statement .   (rule 243)

    $default	reduce using rule 243 (statement)



state 179

    compound_statement  ->  start_block end_block .   (rule 259)

    $default	reduce using rule 259 (compound_statement)



state 180

    statement  ->  compound_statement .   (rule 244)

    $default	reduce using rule 244 (statement)



state 181

    compound_statement  ->  start_block declaration_list . end_block   (rule 261)
    compound_statement  ->  start_block declaration_list . statement_list end_block   (rule 262)
    declaration_list  ->  declaration_list . declaration   (rule 265)

    error	shift, and go to state 82
    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CRITICAL	shift, and go to state 156
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    CASE	shift, and go to state 157
    DEFAULT	shift, and go to state 158
    IF  	shift, and go to state 159
    SWITCH	shift, and go to state 160
    WHILE	shift, and go to state 161
    DO  	shift, and go to state 162
    FOR 	shift, and go to state 163
    GOTO	shift, and go to state 164
    CONTINUE	shift, and go to state 165
    BREAK	shift, and go to state 166
    RETURN	shift, and go to state 167
    INLINEASM	shift, and go to state 168
    INLINE	shift, and go to state 33
    RESTRICT	shift, and go to state 34
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    ';' 	shift, and go to state 169
    '{' 	shift, and go to state 83
    '}' 	shift, and go to state 170

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 174
    declaration	go to state 191
    declaration_specifiers	go to state 86
    declaration_specifiers_	go to state 42
    storage_class_specifier	go to state 43
    function_specifier	go to state 44
    type_specifier	go to state 45
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    statement	go to state 175
    critical	go to state 176
    critical_statement	go to state 177
    labeled_statement	go to state 178
    start_block	go to state 87
    end_block	go to state 273
    compound_statement	go to state 180
    statement_list	go to state 274
    expression_statement	go to state 183
    selection_statement	go to state 184
    while	go to state 185
    do  	go to state 186
    for 	go to state 187
    iteration_statement	go to state 188
    jump_statement	go to state 189
    identifier	go to state 190



state 182

    compound_statement  ->  start_block statement_list . end_block   (rule 260)
    statement_list  ->  statement_list . statement   (rule 267)

    error	shift, and go to state 82
    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    CRITICAL	shift, and go to state 156
    CASE	shift, and go to state 157
    DEFAULT	shift, and go to state 158
    IF  	shift, and go to state 159
    SWITCH	shift, and go to state 160
    WHILE	shift, and go to state 161
    DO  	shift, and go to state 162
    FOR 	shift, and go to state 163
    GOTO	shift, and go to state 164
    CONTINUE	shift, and go to state 165
    BREAK	shift, and go to state 166
    RETURN	shift, and go to state 167
    INLINEASM	shift, and go to state 168
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    ';' 	shift, and go to state 169
    '{' 	shift, and go to state 83
    '}' 	shift, and go to state 170

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 174
    statement	go to state 275
    critical	go to state 176
    critical_statement	go to state 177
    labeled_statement	go to state 178
    start_block	go to state 87
    end_block	go to state 276
    compound_statement	go to state 180
    expression_statement	go to state 183
    selection_statement	go to state 184
    while	go to state 185
    do  	go to state 186
    for 	go to state 187
    iteration_statement	go to state 188
    jump_statement	go to state 189
    identifier	go to state 190



state 183

    statement  ->  expression_statement .   (rule 245)

    $default	reduce using rule 245 (statement)



state 184

    statement  ->  selection_statement .   (rule 246)

    $default	reduce using rule 246 (statement)



state 185

    iteration_statement  ->  while . '(' expr ')' @13 statement   (rule 280)

    '(' 	shift, and go to state 277



state 186

    iteration_statement  ->  do . statement WHILE '(' expr ')' ';'   (rule 281)

    error	shift, and go to state 82
    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    CRITICAL	shift, and go to state 156
    CASE	shift, and go to state 157
    DEFAULT	shift, and go to state 158
    IF  	shift, and go to state 159
    SWITCH	shift, and go to state 160
    WHILE	shift, and go to state 161
    DO  	shift, and go to state 162
    FOR 	shift, and go to state 163
    GOTO	shift, and go to state 164
    CONTINUE	shift, and go to state 165
    BREAK	shift, and go to state 166
    RETURN	shift, and go to state 167
    INLINEASM	shift, and go to state 168
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    ';' 	shift, and go to state 169
    '{' 	shift, and go to state 83

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 174
    statement	go to state 278
    critical	go to state 176
    critical_statement	go to state 177
    labeled_statement	go to state 178
    start_block	go to state 87
    compound_statement	go to state 180
    expression_statement	go to state 183
    selection_statement	go to state 184
    while	go to state 185
    do  	go to state 186
    for 	go to state 187
    iteration_statement	go to state 188
    jump_statement	go to state 189
    identifier	go to state 190



state 187

    iteration_statement  ->  for . '(' expr_opt ';' expr_opt ';' expr_opt ')' statement   (rule 282)

    '(' 	shift, and go to state 279



state 188

    statement  ->  iteration_statement .   (rule 247)

    $default	reduce using rule 247 (statement)



state 189

    statement  ->  jump_statement .   (rule 248)

    $default	reduce using rule 248 (statement)



state 190

    primary_expr  ->  identifier .   (rule 24)
    labeled_statement  ->  identifier . ':'   (rule 253)

    ':' 	shift, and go to state 280

    $default	reduce using rule 24 (primary_expr)



state 191

    declaration_list  ->  declaration_list declaration .   (rule 265)

    $default	reduce using rule 265 (declaration_list)



state 192

    function_body  ->  declaration_list compound_statement .   (rule 23)

    $default	reduce using rule 23 (function_body)



state 193

    function_declarator2  ->  declarator2 '(' ')' .   (rule 203)

    $default	reduce using rule 203 (function_declarator2)



state 194

    function_declarator2  ->  declarator2 '(' @8 . parameter_type_list ')'   (rule 205)

    TYPE_NAME	shift, and go to state 2
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    RESTRICT	shift, and go to state 34

    type_specifier	go to state 106
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    type_specifier_list	go to state 281
    type_specifier_list_	go to state 109
    parameter_type_list	go to state 282
    parameter_list	go to state 283
    parameter_declaration	go to state 284
    type_name	go to state 285



state 195

    function_declarator2  ->  declarator2 '(' identifier_list . ')'   (rule 206)
    identifier_list  ->  identifier_list . ',' identifier   (rule 216)

    ')' 	shift, and go to state 286
    ',' 	shift, and go to state 287



state 196

    identifier_list  ->  identifier .   (rule 215)

    $default	reduce using rule 215 (identifier_list)



state 197

    Interrupt_storage  ->  INTERRUPT constant_expr .   (rule 133)

    $default	reduce using rule 133 (Interrupt_storage)



state 198

    function_attributes  ->  USING constant_expr .   (rule 11)

    $default	reduce using rule 11 (function_attributes)



state 199

    function_attribute  ->  function_attributes function_attribute .   (rule 10)

    $default	reduce using rule 10 (function_attribute)



state 200

    pointer  ->  unqualified_pointer type_specifier_list pointer .   (rule 210)

    $default	reduce using rule 210 (pointer)



state 201

    type_specifier_list_  ->  type_specifier_list_ type_specifier .   (rule 214)

    $default	reduce using rule 214 (type_specifier_list_)



state 202

    enumerator_list  ->  enumerator_list ',' .   (rule 186)
    enumerator_list  ->  enumerator_list ',' . enumerator   (rule 187)

    IDENTIFIER	shift, and go to state 1

    $default	reduce using rule 186 (enumerator_list)

    enumerator	go to state 288
    identifier	go to state 112



state 203

    enum_specifier  ->  ENUM '{' enumerator_list '}' .   (rule 182)

    $default	reduce using rule 182 (enum_specifier)



state 204

    opt_assign_expr  ->  '=' . constant_expr   (rule 189)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 149
    constant_expr	go to state 289
    identifier	go to state 151



state 205

    enumerator  ->  identifier opt_assign_expr .   (rule 188)

    $default	reduce using rule 188 (enumerator)



state 206

    enum_specifier  ->  ENUM identifier '{' enumerator_list . '}'   (rule 183)
    enumerator_list  ->  enumerator_list . ','   (rule 186)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 187)

    ',' 	shift, and go to state 202
    '}' 	shift, and go to state 290



state 207

    init_declarator_list  ->  init_declarator_list ',' init_declarator .   (rule 116)

    $default	reduce using rule 116 (init_declarator_list)



state 208

    initializer  ->  '{' . initializer_list '}'   (rule 239)
    initializer  ->  '{' . initializer_list ',' '}'   (rule 240)

    '[' 	shift, and go to state 291
    '.' 	shift, and go to state 292

    $default	reduce using rule 119 (designation_opt)

    designation_opt	go to state 293
    designation	go to state 294
    designator_list	go to state 295
    designator	go to state 296
    initializer_list	go to state 297



state 209

    initializer  ->  assignment_expr .   (rule 238)

    $default	reduce using rule 238 (initializer)



state 210

    init_declarator  ->  declarator '=' initializer .   (rule 118)

    $default	reduce using rule 118 (init_declarator)



state 211

    primary_expr  ->  '(' . expr ')'   (rule 27)
    unary_expr  ->  SIZEOF '(' . type_name ')'   (rule 46)

    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    RESTRICT	shift, and go to state 34
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 217
    type_specifier	go to state 106
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    type_specifier_list	go to state 218
    type_specifier_list_	go to state 109
    type_name	go to state 298
    identifier	go to state 151



state 212

    unary_expr  ->  SIZEOF unary_expr .   (rule 45)

    $default	reduce using rule 45 (unary_expr)



state 213

    primary_expr  ->  '(' . expr ')'   (rule 27)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 217
    identifier	go to state 151



state 214

    unary_expr  ->  TYPEOF unary_expr .   (rule 47)

    $default	reduce using rule 47 (unary_expr)



state 215

    unary_expr  ->  INC_OP unary_expr .   (rule 42)

    $default	reduce using rule 42 (unary_expr)



state 216

    unary_expr  ->  DEC_OP unary_expr .   (rule 43)

    $default	reduce using rule 43 (unary_expr)



state 217

    primary_expr  ->  '(' expr . ')'   (rule 27)
    expr  ->  expr . ',' @6 assignment_expr   (rule 104)

    ')' 	shift, and go to state 299
    ',' 	shift, and go to state 270



state 218

    type_name  ->  type_specifier_list .   (rule 223)
    type_name  ->  type_specifier_list . abstract_declarator   (rule 224)

    '(' 	shift, and go to state 300
    '[' 	shift, and go to state 301
    '*' 	shift, and go to state 36

    $default	reduce using rule 223 (type_name)

    pointer	go to state 302
    unqualified_pointer	go to state 58
    abstract_declarator	go to state 303
    abstract_declarator2	go to state 304



state 219

    cast_expr  ->  '(' type_name . ')' cast_expr   (rule 55)

    ')' 	shift, and go to state 305



state 220

    postfix_expr  ->  postfix_expr PTR_OP . @2 identifier   (rule 36)

    $default	reduce using rule 35 (@2)

    @2  	go to state 306



state 221

    postfix_expr  ->  postfix_expr INC_OP .   (rule 37)

    $default	reduce using rule 37 (postfix_expr)



state 222

    postfix_expr  ->  postfix_expr DEC_OP .   (rule 38)

    $default	reduce using rule 38 (postfix_expr)



state 223

    postfix_expr  ->  postfix_expr '(' . ')'   (rule 31)
    postfix_expr  ->  postfix_expr '(' . argument_expr_list ')'   (rule 32)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    ')' 	shift, and go to state 307
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    argument_expr_list	go to state 308
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 309
    identifier	go to state 151



state 224

    postfix_expr  ->  postfix_expr '[' . expr ']'   (rule 30)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 310
    identifier	go to state 151



state 225

    postfix_expr  ->  postfix_expr '.' . @1 identifier   (rule 34)

    $default	reduce using rule 33 (@1)

    @1  	go to state 311



state 226

    unary_expr  ->  unary_operator cast_expr .   (rule 44)

    $default	reduce using rule 44 (unary_expr)



state 227

    multiplicative_expr  ->  multiplicative_expr '*' . cast_expr   (rule 57)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 312
    identifier	go to state 151



state 228

    multiplicative_expr  ->  multiplicative_expr '/' . cast_expr   (rule 58)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 313
    identifier	go to state 151



state 229

    multiplicative_expr  ->  multiplicative_expr '%' . cast_expr   (rule 59)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 314
    identifier	go to state 151



state 230

    additive_expr  ->  additive_expr '+' . multiplicative_expr   (rule 61)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 315
    identifier	go to state 151



state 231

    additive_expr  ->  additive_expr '-' . multiplicative_expr   (rule 62)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 316
    identifier	go to state 151



state 232

    shift_expr  ->  shift_expr LEFT_OP . additive_expr   (rule 64)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 317
    identifier	go to state 151



state 233

    shift_expr  ->  shift_expr RIGHT_OP . additive_expr   (rule 65)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 318
    identifier	go to state 151



state 234

    relational_expr  ->  relational_expr LE_OP . shift_expr   (rule 69)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 319
    identifier	go to state 151



state 235

    relational_expr  ->  relational_expr GE_OP . shift_expr   (rule 70)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 320
    identifier	go to state 151



state 236

    relational_expr  ->  relational_expr '<' . shift_expr   (rule 67)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 321
    identifier	go to state 151



state 237

    relational_expr  ->  relational_expr '>' . shift_expr   (rule 68)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 322
    identifier	go to state 151



state 238

    equality_expr  ->  equality_expr EQ_OP . relational_expr   (rule 72)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 323
    identifier	go to state 151



state 239

    equality_expr  ->  equality_expr NE_OP . relational_expr   (rule 73)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 324
    identifier	go to state 151



state 240

    and_expr  ->  and_expr '&' . equality_expr   (rule 75)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 325
    identifier	go to state 151



state 241

    exclusive_or_expr  ->  exclusive_or_expr '^' . and_expr   (rule 77)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 326
    identifier	go to state 151



state 242

    inclusive_or_expr  ->  inclusive_or_expr '|' . exclusive_or_expr   (rule 79)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 327
    identifier	go to state 151



state 243

    logical_and_expr  ->  logical_and_expr AND_OP . @3 inclusive_or_expr   (rule 82)

    $default	reduce using rule 81 (@3)

    @3  	go to state 328



state 244

    logical_or_expr  ->  logical_or_expr OR_OP . @4 logical_and_expr   (rule 85)

    $default	reduce using rule 84 (@4)

    @4  	go to state 329



state 245

    conditional_expr  ->  logical_or_expr '?' . @5 logical_or_expr ':' conditional_expr   (rule 88)

    $default	reduce using rule 87 (@5)

    @5  	go to state 330



state 246

    struct_or_union_specifier  ->  struct_or_union opt_stag @7 '{' . struct_declaration_list '}'   (rule 166)

    TYPE_NAME	shift, and go to state 2
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    RESTRICT	shift, and go to state 34

    type_specifier	go to state 106
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    struct_declaration_list	go to state 331
    struct_declaration	go to state 332
    enum_specifier	go to state 51
    type_specifier_list	go to state 333
    type_specifier_list_	go to state 109



state 247

    declarator2  ->  declarator3 '[' constant_expr ']' .   (rule 202)

    $default	reduce using rule 202 (declarator2)



state 248

    labeled_statement  ->  CASE constant_expr . ':'   (rule 254)

    ':' 	shift, and go to state 334



state 249

    labeled_statement  ->  DEFAULT @10 . ':'   (rule 256)

    ':' 	shift, and go to state 335



state 250

    selection_statement  ->  IF '(' . expr ')' @11 statement else_statement   (rule 273)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 336
    identifier	go to state 151



state 251

    selection_statement  ->  SWITCH '(' . expr ')' @12 statement   (rule 275)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 337
    identifier	go to state 151



state 252

    jump_statement  ->  GOTO identifier . ';'   (rule 285)

    ';' 	shift, and go to state 338



state 253

    jump_statement  ->  CONTINUE ';' .   (rule 286)

    $default	reduce using rule 286 (jump_statement)



state 254

    jump_statement  ->  BREAK ';' .   (rule 287)

    $default	reduce using rule 287 (jump_statement)



state 255

    jump_statement  ->  RETURN ';' .   (rule 288)

    $default	reduce using rule 288 (jump_statement)



state 256

    expr  ->  expr . ',' @6 assignment_expr   (rule 104)
    jump_statement  ->  RETURN expr . ';'   (rule 289)

    ',' 	shift, and go to state 270
    ';' 	shift, and go to state 339



state 257

    statement  ->  INLINEASM ';' .   (rule 250)

    $default	reduce using rule 250 (statement)



state 258

    assignment_operator  ->  MUL_ASSIGN .   (rule 92)

    $default	reduce using rule 92 (assignment_operator)



state 259

    assignment_operator  ->  DIV_ASSIGN .   (rule 93)

    $default	reduce using rule 93 (assignment_operator)



state 260

    assignment_operator  ->  MOD_ASSIGN .   (rule 94)

    $default	reduce using rule 94 (assignment_operator)



state 261

    assignment_operator  ->  ADD_ASSIGN .   (rule 95)

    $default	reduce using rule 95 (assignment_operator)



state 262

    assignment_operator  ->  SUB_ASSIGN .   (rule 96)

    $default	reduce using rule 96 (assignment_operator)



state 263

    assignment_operator  ->  LEFT_ASSIGN .   (rule 97)

    $default	reduce using rule 97 (assignment_operator)



state 264

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 98)

    $default	reduce using rule 98 (assignment_operator)



state 265

    assignment_operator  ->  AND_ASSIGN .   (rule 99)

    $default	reduce using rule 99 (assignment_operator)



state 266

    assignment_operator  ->  XOR_ASSIGN .   (rule 100)

    $default	reduce using rule 100 (assignment_operator)



state 267

    assignment_operator  ->  OR_ASSIGN .   (rule 101)

    $default	reduce using rule 101 (assignment_operator)



state 268

    assignment_operator  ->  '=' .   (rule 91)

    $default	reduce using rule 91 (assignment_operator)



state 269

    assignment_expr  ->  cast_expr assignment_operator . assignment_expr   (rule 90)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 340
    identifier	go to state 151



state 270

    expr  ->  expr ',' . @6 assignment_expr   (rule 104)

    $default	reduce using rule 103 (@6)

    @6  	go to state 341



state 271

    expression_statement  ->  expr ';' .   (rule 269)

    $default	reduce using rule 269 (expression_statement)



state 272

    critical_statement  ->  critical statement .   (rule 252)

    $default	reduce using rule 252 (critical_statement)



state 273

    compound_statement  ->  start_block declaration_list end_block .   (rule 261)

    $default	reduce using rule 261 (compound_statement)



state 274

    compound_statement  ->  start_block declaration_list statement_list . end_block   (rule 262)
    statement_list  ->  statement_list . statement   (rule 267)

    error	shift, and go to state 82
    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    CRITICAL	shift, and go to state 156
    CASE	shift, and go to state 157
    DEFAULT	shift, and go to state 158
    IF  	shift, and go to state 159
    SWITCH	shift, and go to state 160
    WHILE	shift, and go to state 161
    DO  	shift, and go to state 162
    FOR 	shift, and go to state 163
    GOTO	shift, and go to state 164
    CONTINUE	shift, and go to state 165
    BREAK	shift, and go to state 166
    RETURN	shift, and go to state 167
    INLINEASM	shift, and go to state 168
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    ';' 	shift, and go to state 169
    '{' 	shift, and go to state 83
    '}' 	shift, and go to state 170

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 174
    statement	go to state 275
    critical	go to state 176
    critical_statement	go to state 177
    labeled_statement	go to state 178
    start_block	go to state 87
    end_block	go to state 342
    compound_statement	go to state 180
    expression_statement	go to state 183
    selection_statement	go to state 184
    while	go to state 185
    do  	go to state 186
    for 	go to state 187
    iteration_statement	go to state 188
    jump_statement	go to state 189
    identifier	go to state 190



state 275

    statement_list  ->  statement_list statement .   (rule 267)

    $default	reduce using rule 267 (statement_list)



state 276

    compound_statement  ->  start_block statement_list end_block .   (rule 260)

    $default	reduce using rule 260 (compound_statement)



state 277

    iteration_statement  ->  while '(' . expr ')' @13 statement   (rule 280)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 343
    identifier	go to state 151



state 278

    iteration_statement  ->  do statement . WHILE '(' expr ')' ';'   (rule 281)

    WHILE	shift, and go to state 344



state 279

    iteration_statement  ->  for '(' . expr_opt ';' expr_opt ';' expr_opt ')' statement   (rule 282)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    $default	reduce using rule 283 (expr_opt)

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 345
    expr_opt	go to state 346
    identifier	go to state 151



state 280

    labeled_statement  ->  identifier ':' .   (rule 253)

    $default	reduce using rule 253 (labeled_statement)



state 281

    parameter_declaration  ->  type_specifier_list . declarator   (rule 221)
    type_name  ->  type_specifier_list .   (rule 223)
    type_name  ->  type_specifier_list . abstract_declarator   (rule 224)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 347
    '[' 	shift, and go to state 301
    '*' 	shift, and go to state 36

    $default	reduce using rule 223 (type_name)

    declarator	go to state 348
    declarator3	go to state 64
    declarator2_function_attributes	go to state 65
    declarator2	go to state 55
    function_declarator2	go to state 56
    pointer	go to state 349
    unqualified_pointer	go to state 58
    abstract_declarator	go to state 303
    abstract_declarator2	go to state 304
    identifier	go to state 59



state 282

    function_declarator2  ->  declarator2 '(' @8 parameter_type_list . ')'   (rule 205)

    ')' 	shift, and go to state 350



state 283

    parameter_type_list  ->  parameter_list .   (rule 217)
    parameter_type_list  ->  parameter_list . ',' VAR_ARGS   (rule 218)
    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 220)

    ',' 	shift, and go to state 351

    $default	reduce using rule 217 (parameter_type_list)



state 284

    parameter_list  ->  parameter_declaration .   (rule 219)

    $default	reduce using rule 219 (parameter_list)



state 285

    parameter_declaration  ->  type_name .   (rule 222)

    $default	reduce using rule 222 (parameter_declaration)



state 286

    function_declarator2  ->  declarator2 '(' identifier_list ')' .   (rule 206)

    $default	reduce using rule 206 (function_declarator2)



state 287

    identifier_list  ->  identifier_list ',' . identifier   (rule 216)

    IDENTIFIER	shift, and go to state 1

    identifier	go to state 352



state 288

    enumerator_list  ->  enumerator_list ',' enumerator .   (rule 187)

    $default	reduce using rule 187 (enumerator_list)



state 289

    opt_assign_expr  ->  '=' constant_expr .   (rule 189)

    $default	reduce using rule 189 (opt_assign_expr)



state 290

    enum_specifier  ->  ENUM identifier '{' enumerator_list '}' .   (rule 183)

    $default	reduce using rule 183 (enum_specifier)



state 291

    designator  ->  '[' . constant_expr ']'   (rule 124)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 149
    constant_expr	go to state 353
    identifier	go to state 151



state 292

    designator  ->  '.' . identifier   (rule 125)

    IDENTIFIER	shift, and go to state 1

    identifier	go to state 354



state 293

    initializer_list  ->  designation_opt . initializer   (rule 241)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    '{' 	shift, and go to state 208

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 209
    initializer	go to state 355
    identifier	go to state 151



state 294

    designation_opt  ->  designation .   (rule 120)

    $default	reduce using rule 120 (designation_opt)



state 295

    designation  ->  designator_list . '='   (rule 121)
    designator_list  ->  designator_list . designator   (rule 123)

    '[' 	shift, and go to state 291
    '.' 	shift, and go to state 292
    '=' 	shift, and go to state 356

    designator	go to state 357



state 296

    designator_list  ->  designator .   (rule 122)

    $default	reduce using rule 122 (designator_list)



state 297

    initializer  ->  '{' initializer_list . '}'   (rule 239)
    initializer  ->  '{' initializer_list . ',' '}'   (rule 240)
    initializer_list  ->  initializer_list . ',' designation_opt initializer   (rule 242)

    ',' 	shift, and go to state 358
    '}' 	shift, and go to state 359



state 298

    unary_expr  ->  SIZEOF '(' type_name . ')'   (rule 46)

    ')' 	shift, and go to state 360



state 299

    primary_expr  ->  '(' expr ')' .   (rule 27)

    $default	reduce using rule 27 (primary_expr)



state 300

    abstract_declarator2  ->  '(' . abstract_declarator ')'   (rule 228)
    abstract_declarator2  ->  '(' . ')'   (rule 233)
    abstract_declarator2  ->  '(' . parameter_type_list ')'   (rule 234)

    TYPE_NAME	shift, and go to state 2
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    RESTRICT	shift, and go to state 34
    '(' 	shift, and go to state 300
    ')' 	shift, and go to state 361
    '[' 	shift, and go to state 301
    '*' 	shift, and go to state 36

    type_specifier	go to state 106
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    pointer	go to state 302
    unqualified_pointer	go to state 58
    type_specifier_list	go to state 281
    type_specifier_list_	go to state 109
    parameter_type_list	go to state 362
    parameter_list	go to state 283
    parameter_declaration	go to state 284
    type_name	go to state 285
    abstract_declarator	go to state 363
    abstract_declarator2	go to state 304



state 301

    abstract_declarator2  ->  '[' . ']'   (rule 229)
    abstract_declarator2  ->  '[' . constant_expr ']'   (rule 230)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    ']' 	shift, and go to state 364
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 149
    constant_expr	go to state 365
    identifier	go to state 151



state 302

    abstract_declarator  ->  pointer .   (rule 225)
    abstract_declarator  ->  pointer . abstract_declarator2   (rule 227)

    '(' 	shift, and go to state 300
    '[' 	shift, and go to state 301

    $default	reduce using rule 225 (abstract_declarator)

    abstract_declarator2	go to state 366



state 303

    type_name  ->  type_specifier_list abstract_declarator .   (rule 224)

    $default	reduce using rule 224 (type_name)



state 304

    abstract_declarator  ->  abstract_declarator2 .   (rule 226)
    abstract_declarator2  ->  abstract_declarator2 . '[' ']'   (rule 231)
    abstract_declarator2  ->  abstract_declarator2 . '[' constant_expr ']'   (rule 232)
    abstract_declarator2  ->  abstract_declarator2 . '(' ')'   (rule 235)
    abstract_declarator2  ->  abstract_declarator2 . '(' @9 parameter_type_list ')'   (rule 237)

    '(' 	shift, and go to state 367
    '[' 	shift, and go to state 368

    $default	reduce using rule 226 (abstract_declarator)



state 305

    cast_expr  ->  '(' type_name ')' . cast_expr   (rule 55)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 369
    identifier	go to state 151



state 306

    postfix_expr  ->  postfix_expr PTR_OP @2 . identifier   (rule 36)

    IDENTIFIER	shift, and go to state 1

    identifier	go to state 370



state 307

    postfix_expr  ->  postfix_expr '(' ')' .   (rule 31)

    $default	reduce using rule 31 (postfix_expr)



state 308

    postfix_expr  ->  postfix_expr '(' argument_expr_list . ')'   (rule 32)

    ')' 	shift, and go to state 371



state 309

    argument_expr_list  ->  assignment_expr .   (rule 39)
    argument_expr_list  ->  assignment_expr . ',' argument_expr_list   (rule 40)

    ',' 	shift, and go to state 372

    $default	reduce using rule 39 (argument_expr_list)



state 310

    postfix_expr  ->  postfix_expr '[' expr . ']'   (rule 30)
    expr  ->  expr . ',' @6 assignment_expr   (rule 104)

    ']' 	shift, and go to state 373
    ',' 	shift, and go to state 270



state 311

    postfix_expr  ->  postfix_expr '.' @1 . identifier   (rule 34)

    IDENTIFIER	shift, and go to state 1

    identifier	go to state 374



state 312

    multiplicative_expr  ->  multiplicative_expr '*' cast_expr .   (rule 57)

    $default	reduce using rule 57 (multiplicative_expr)



state 313

    multiplicative_expr  ->  multiplicative_expr '/' cast_expr .   (rule 58)

    $default	reduce using rule 58 (multiplicative_expr)



state 314

    multiplicative_expr  ->  multiplicative_expr '%' cast_expr .   (rule 59)

    $default	reduce using rule 59 (multiplicative_expr)



state 315

    multiplicative_expr  ->  multiplicative_expr . '*' cast_expr   (rule 57)
    multiplicative_expr  ->  multiplicative_expr . '/' cast_expr   (rule 58)
    multiplicative_expr  ->  multiplicative_expr . '%' cast_expr   (rule 59)
    additive_expr  ->  additive_expr '+' multiplicative_expr .   (rule 61)

    '*' 	shift, and go to state 227
    '/' 	shift, and go to state 228
    '%' 	shift, and go to state 229

    '*' 	[reduce using rule 61 (additive_expr)]
    $default	reduce using rule 61 (additive_expr)



state 316

    multiplicative_expr  ->  multiplicative_expr . '*' cast_expr   (rule 57)
    multiplicative_expr  ->  multiplicative_expr . '/' cast_expr   (rule 58)
    multiplicative_expr  ->  multiplicative_expr . '%' cast_expr   (rule 59)
    additive_expr  ->  additive_expr '-' multiplicative_expr .   (rule 62)

    '*' 	shift, and go to state 227
    '/' 	shift, and go to state 228
    '%' 	shift, and go to state 229

    '*' 	[reduce using rule 62 (additive_expr)]
    $default	reduce using rule 62 (additive_expr)



state 317

    additive_expr  ->  additive_expr . '+' multiplicative_expr   (rule 61)
    additive_expr  ->  additive_expr . '-' multiplicative_expr   (rule 62)
    shift_expr  ->  shift_expr LEFT_OP additive_expr .   (rule 64)

    '+' 	shift, and go to state 230
    '-' 	shift, and go to state 231

    $default	reduce using rule 64 (shift_expr)



state 318

    additive_expr  ->  additive_expr . '+' multiplicative_expr   (rule 61)
    additive_expr  ->  additive_expr . '-' multiplicative_expr   (rule 62)
    shift_expr  ->  shift_expr RIGHT_OP additive_expr .   (rule 65)

    '+' 	shift, and go to state 230
    '-' 	shift, and go to state 231

    $default	reduce using rule 65 (shift_expr)



state 319

    shift_expr  ->  shift_expr . LEFT_OP additive_expr   (rule 64)
    shift_expr  ->  shift_expr . RIGHT_OP additive_expr   (rule 65)
    relational_expr  ->  relational_expr LE_OP shift_expr .   (rule 69)

    LEFT_OP	shift, and go to state 232
    RIGHT_OP	shift, and go to state 233

    $default	reduce using rule 69 (relational_expr)



state 320

    shift_expr  ->  shift_expr . LEFT_OP additive_expr   (rule 64)
    shift_expr  ->  shift_expr . RIGHT_OP additive_expr   (rule 65)
    relational_expr  ->  relational_expr GE_OP shift_expr .   (rule 70)

    LEFT_OP	shift, and go to state 232
    RIGHT_OP	shift, and go to state 233

    $default	reduce using rule 70 (relational_expr)



state 321

    shift_expr  ->  shift_expr . LEFT_OP additive_expr   (rule 64)
    shift_expr  ->  shift_expr . RIGHT_OP additive_expr   (rule 65)
    relational_expr  ->  relational_expr '<' shift_expr .   (rule 67)

    LEFT_OP	shift, and go to state 232
    RIGHT_OP	shift, and go to state 233

    $default	reduce using rule 67 (relational_expr)



state 322

    shift_expr  ->  shift_expr . LEFT_OP additive_expr   (rule 64)
    shift_expr  ->  shift_expr . RIGHT_OP additive_expr   (rule 65)
    relational_expr  ->  relational_expr '>' shift_expr .   (rule 68)

    LEFT_OP	shift, and go to state 232
    RIGHT_OP	shift, and go to state 233

    $default	reduce using rule 68 (relational_expr)



state 323

    relational_expr  ->  relational_expr . '<' shift_expr   (rule 67)
    relational_expr  ->  relational_expr . '>' shift_expr   (rule 68)
    relational_expr  ->  relational_expr . LE_OP shift_expr   (rule 69)
    relational_expr  ->  relational_expr . GE_OP shift_expr   (rule 70)
    equality_expr  ->  equality_expr EQ_OP relational_expr .   (rule 72)

    LE_OP	shift, and go to state 234
    GE_OP	shift, and go to state 235
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 237

    $default	reduce using rule 72 (equality_expr)



state 324

    relational_expr  ->  relational_expr . '<' shift_expr   (rule 67)
    relational_expr  ->  relational_expr . '>' shift_expr   (rule 68)
    relational_expr  ->  relational_expr . LE_OP shift_expr   (rule 69)
    relational_expr  ->  relational_expr . GE_OP shift_expr   (rule 70)
    equality_expr  ->  equality_expr NE_OP relational_expr .   (rule 73)

    LE_OP	shift, and go to state 234
    GE_OP	shift, and go to state 235
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 237

    $default	reduce using rule 73 (equality_expr)



state 325

    equality_expr  ->  equality_expr . EQ_OP relational_expr   (rule 72)
    equality_expr  ->  equality_expr . NE_OP relational_expr   (rule 73)
    and_expr  ->  and_expr '&' equality_expr .   (rule 75)

    EQ_OP	shift, and go to state 238
    NE_OP	shift, and go to state 239

    $default	reduce using rule 75 (and_expr)



state 326

    and_expr  ->  and_expr . '&' equality_expr   (rule 75)
    exclusive_or_expr  ->  exclusive_or_expr '^' and_expr .   (rule 77)

    '&' 	shift, and go to state 240

    $default	reduce using rule 77 (exclusive_or_expr)



state 327

    exclusive_or_expr  ->  exclusive_or_expr . '^' and_expr   (rule 77)
    inclusive_or_expr  ->  inclusive_or_expr '|' exclusive_or_expr .   (rule 79)

    '^' 	shift, and go to state 241

    $default	reduce using rule 79 (inclusive_or_expr)



state 328

    logical_and_expr  ->  logical_and_expr AND_OP @3 . inclusive_or_expr   (rule 82)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 375
    identifier	go to state 151



state 329

    logical_or_expr  ->  logical_or_expr OR_OP @4 . logical_and_expr   (rule 85)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 376
    identifier	go to state 151



state 330

    conditional_expr  ->  logical_or_expr '?' @5 . logical_or_expr ':' conditional_expr   (rule 88)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 377
    identifier	go to state 151



state 331

    struct_or_union_specifier  ->  struct_or_union opt_stag @7 '{' struct_declaration_list . '}'   (rule 166)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 174)

    TYPE_NAME	shift, and go to state 2
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    RESTRICT	shift, and go to state 34
    '}' 	shift, and go to state 378

    type_specifier	go to state 106
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    struct_declaration	go to state 379
    enum_specifier	go to state 51
    type_specifier_list	go to state 333
    type_specifier_list_	go to state 109



state 332

    struct_declaration_list  ->  struct_declaration .   (rule 173)

    $default	reduce using rule 173 (struct_declaration_list)



state 333

    struct_declaration  ->  type_specifier_list . struct_declarator_list ';'   (rule 175)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 35
    '*' 	shift, and go to state 36
    ':' 	shift, and go to state 380

    $default	reduce using rule 181 (struct_declarator)

    struct_declarator_list	go to state 381
    struct_declarator	go to state 382
    declarator	go to state 383
    declarator3	go to state 64
    declarator2_function_attributes	go to state 65
    declarator2	go to state 55
    function_declarator2	go to state 56
    pointer	go to state 66
    unqualified_pointer	go to state 58
    identifier	go to state 59



state 334

    labeled_statement  ->  CASE constant_expr ':' .   (rule 254)

    $default	reduce using rule 254 (labeled_statement)



state 335

    labeled_statement  ->  DEFAULT @10 ':' .   (rule 256)

    $default	reduce using rule 256 (labeled_statement)



state 336

    expr  ->  expr . ',' @6 assignment_expr   (rule 104)
    selection_statement  ->  IF '(' expr . ')' @11 statement else_statement   (rule 273)

    ')' 	shift, and go to state 384
    ',' 	shift, and go to state 270



state 337

    expr  ->  expr . ',' @6 assignment_expr   (rule 104)
    selection_statement  ->  SWITCH '(' expr . ')' @12 statement   (rule 275)

    ')' 	shift, and go to state 385
    ',' 	shift, and go to state 270



state 338

    jump_statement  ->  GOTO identifier ';' .   (rule 285)

    $default	reduce using rule 285 (jump_statement)



state 339

    jump_statement  ->  RETURN expr ';' .   (rule 289)

    $default	reduce using rule 289 (jump_statement)



state 340

    assignment_expr  ->  cast_expr assignment_operator assignment_expr .   (rule 90)

    $default	reduce using rule 90 (assignment_expr)



state 341

    expr  ->  expr ',' @6 . assignment_expr   (rule 104)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 386
    identifier	go to state 151



state 342

    compound_statement  ->  start_block declaration_list statement_list end_block .   (rule 262)

    $default	reduce using rule 262 (compound_statement)



state 343

    expr  ->  expr . ',' @6 assignment_expr   (rule 104)
    iteration_statement  ->  while '(' expr . ')' @13 statement   (rule 280)

    ')' 	shift, and go to state 387
    ',' 	shift, and go to state 270



state 344

    iteration_statement  ->  do statement WHILE . '(' expr ')' ';'   (rule 281)

    '(' 	shift, and go to state 388



state 345

    expr  ->  expr . ',' @6 assignment_expr   (rule 104)
    expr_opt  ->  expr .   (rule 284)

    ',' 	shift, and go to state 270

    $default	reduce using rule 284 (expr_opt)



state 346

    iteration_statement  ->  for '(' expr_opt . ';' expr_opt ';' expr_opt ')' statement   (rule 282)

    ';' 	shift, and go to state 389



state 347

    declarator2  ->  '(' . declarator ')'   (rule 200)
    abstract_declarator2  ->  '(' . abstract_declarator ')'   (rule 228)
    abstract_declarator2  ->  '(' . ')'   (rule 233)
    abstract_declarator2  ->  '(' . parameter_type_list ')'   (rule 234)

    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    RESTRICT	shift, and go to state 34
    '(' 	shift, and go to state 347
    ')' 	shift, and go to state 361
    '[' 	shift, and go to state 301
    '*' 	shift, and go to state 36

    type_specifier	go to state 106
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    declarator	go to state 63
    declarator3	go to state 64
    declarator2_function_attributes	go to state 65
    declarator2	go to state 55
    function_declarator2	go to state 56
    pointer	go to state 349
    unqualified_pointer	go to state 58
    type_specifier_list	go to state 281
    type_specifier_list_	go to state 109
    parameter_type_list	go to state 362
    parameter_list	go to state 283
    parameter_declaration	go to state 284
    type_name	go to state 285
    abstract_declarator	go to state 363
    abstract_declarator2	go to state 304
    identifier	go to state 59



state 348

    parameter_declaration  ->  type_specifier_list declarator .   (rule 221)

    $default	reduce using rule 221 (parameter_declaration)



state 349

    declarator  ->  pointer . declarator3   (rule 192)
    abstract_declarator  ->  pointer .   (rule 225)
    abstract_declarator  ->  pointer . abstract_declarator2   (rule 227)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 347
    '[' 	shift, and go to state 301

    $default	reduce using rule 225 (abstract_declarator)

    declarator3	go to state 115
    declarator2_function_attributes	go to state 65
    declarator2	go to state 55
    function_declarator2	go to state 56
    abstract_declarator2	go to state 366
    identifier	go to state 59



state 350

    function_declarator2  ->  declarator2 '(' @8 parameter_type_list ')' .   (rule 205)

    $default	reduce using rule 205 (function_declarator2)



state 351

    parameter_type_list  ->  parameter_list ',' . VAR_ARGS   (rule 218)
    parameter_list  ->  parameter_list ',' . parameter_declaration   (rule 220)

    TYPE_NAME	shift, and go to state 2
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    VAR_ARGS	shift, and go to state 390
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    RESTRICT	shift, and go to state 34

    type_specifier	go to state 106
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    type_specifier_list	go to state 281
    type_specifier_list_	go to state 109
    parameter_declaration	go to state 391
    type_name	go to state 285



state 352

    identifier_list  ->  identifier_list ',' identifier .   (rule 216)

    $default	reduce using rule 216 (identifier_list)



state 353

    designator  ->  '[' constant_expr . ']'   (rule 124)

    ']' 	shift, and go to state 392



state 354

    designator  ->  '.' identifier .   (rule 125)

    $default	reduce using rule 125 (designator)



state 355

    initializer_list  ->  designation_opt initializer .   (rule 241)

    $default	reduce using rule 241 (initializer_list)



state 356

    designation  ->  designator_list '=' .   (rule 121)

    $default	reduce using rule 121 (designation)



state 357

    designator_list  ->  designator_list designator .   (rule 123)

    $default	reduce using rule 123 (designator_list)



state 358

    initializer  ->  '{' initializer_list ',' . '}'   (rule 240)
    initializer_list  ->  initializer_list ',' . designation_opt initializer   (rule 242)

    '[' 	shift, and go to state 291
    '.' 	shift, and go to state 292
    '}' 	shift, and go to state 393

    $default	reduce using rule 119 (designation_opt)

    designation_opt	go to state 394
    designation	go to state 294
    designator_list	go to state 295
    designator	go to state 296



state 359

    initializer  ->  '{' initializer_list '}' .   (rule 239)

    $default	reduce using rule 239 (initializer)



state 360

    unary_expr  ->  SIZEOF '(' type_name ')' .   (rule 46)

    $default	reduce using rule 46 (unary_expr)



state 361

    abstract_declarator2  ->  '(' ')' .   (rule 233)

    $default	reduce using rule 233 (abstract_declarator2)



state 362

    abstract_declarator2  ->  '(' parameter_type_list . ')'   (rule 234)

    ')' 	shift, and go to state 395



state 363

    abstract_declarator2  ->  '(' abstract_declarator . ')'   (rule 228)

    ')' 	shift, and go to state 396



state 364

    abstract_declarator2  ->  '[' ']' .   (rule 229)

    $default	reduce using rule 229 (abstract_declarator2)



state 365

    abstract_declarator2  ->  '[' constant_expr . ']'   (rule 230)

    ']' 	shift, and go to state 397



state 366

    abstract_declarator  ->  pointer abstract_declarator2 .   (rule 227)
    abstract_declarator2  ->  abstract_declarator2 . '[' ']'   (rule 231)
    abstract_declarator2  ->  abstract_declarator2 . '[' constant_expr ']'   (rule 232)
    abstract_declarator2  ->  abstract_declarator2 . '(' ')'   (rule 235)
    abstract_declarator2  ->  abstract_declarator2 . '(' @9 parameter_type_list ')'   (rule 237)

    '(' 	shift, and go to state 367
    '[' 	shift, and go to state 368

    $default	reduce using rule 227 (abstract_declarator)



state 367

    abstract_declarator2  ->  abstract_declarator2 '(' . ')'   (rule 235)
    abstract_declarator2  ->  abstract_declarator2 '(' . @9 parameter_type_list ')'   (rule 237)

    ')' 	shift, and go to state 398

    $default	reduce using rule 236 (@9)

    @9  	go to state 399



state 368

    abstract_declarator2  ->  abstract_declarator2 '[' . ']'   (rule 231)
    abstract_declarator2  ->  abstract_declarator2 '[' . constant_expr ']'   (rule 232)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    ']' 	shift, and go to state 400
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 149
    constant_expr	go to state 401
    identifier	go to state 151



state 369

    cast_expr  ->  '(' type_name ')' cast_expr .   (rule 55)

    $default	reduce using rule 55 (cast_expr)



state 370

    postfix_expr  ->  postfix_expr PTR_OP @2 identifier .   (rule 36)

    $default	reduce using rule 36 (postfix_expr)



state 371

    postfix_expr  ->  postfix_expr '(' argument_expr_list ')' .   (rule 32)

    $default	reduce using rule 32 (postfix_expr)



state 372

    argument_expr_list  ->  assignment_expr ',' . argument_expr_list   (rule 40)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    argument_expr_list	go to state 402
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 309
    identifier	go to state 151



state 373

    postfix_expr  ->  postfix_expr '[' expr ']' .   (rule 30)

    $default	reduce using rule 30 (postfix_expr)



state 374

    postfix_expr  ->  postfix_expr '.' @1 identifier .   (rule 34)

    $default	reduce using rule 34 (postfix_expr)



state 375

    inclusive_or_expr  ->  inclusive_or_expr . '|' exclusive_or_expr   (rule 79)
    logical_and_expr  ->  logical_and_expr AND_OP @3 inclusive_or_expr .   (rule 82)

    '|' 	shift, and go to state 242

    $default	reduce using rule 82 (logical_and_expr)



state 376

    logical_and_expr  ->  logical_and_expr . AND_OP @3 inclusive_or_expr   (rule 82)
    logical_or_expr  ->  logical_or_expr OR_OP @4 logical_and_expr .   (rule 85)

    AND_OP	shift, and go to state 243

    $default	reduce using rule 85 (logical_or_expr)



state 377

    logical_or_expr  ->  logical_or_expr . OR_OP @4 logical_and_expr   (rule 85)
    conditional_expr  ->  logical_or_expr '?' @5 logical_or_expr . ':' conditional_expr   (rule 88)

    OR_OP	shift, and go to state 244
    ':' 	shift, and go to state 403



state 378

    struct_or_union_specifier  ->  struct_or_union opt_stag @7 '{' struct_declaration_list '}' .   (rule 166)

    $default	reduce using rule 166 (struct_or_union_specifier)



state 379

    struct_declaration_list  ->  struct_declaration_list struct_declaration .   (rule 174)

    $default	reduce using rule 174 (struct_declaration_list)



state 380

    struct_declarator  ->  ':' . constant_expr   (rule 179)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 149
    constant_expr	go to state 404
    identifier	go to state 151



state 381

    struct_declaration  ->  type_specifier_list struct_declarator_list . ';'   (rule 175)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 177)

    ',' 	shift, and go to state 405
    ';' 	shift, and go to state 406



state 382

    struct_declarator_list  ->  struct_declarator .   (rule 176)

    $default	reduce using rule 176 (struct_declarator_list)



state 383

    struct_declarator  ->  declarator .   (rule 178)
    struct_declarator  ->  declarator . ':' constant_expr   (rule 180)

    ':' 	shift, and go to state 407

    $default	reduce using rule 178 (struct_declarator)



state 384

    selection_statement  ->  IF '(' expr ')' . @11 statement else_statement   (rule 273)

    $default	reduce using rule 272 (@11)

    @11 	go to state 408



state 385

    selection_statement  ->  SWITCH '(' expr ')' . @12 statement   (rule 275)

    $default	reduce using rule 274 (@12)

    @12 	go to state 409



state 386

    expr  ->  expr ',' @6 assignment_expr .   (rule 104)

    $default	reduce using rule 104 (expr)



state 387

    iteration_statement  ->  while '(' expr ')' . @13 statement   (rule 280)

    $default	reduce using rule 279 (@13)

    @13 	go to state 410



state 388

    iteration_statement  ->  do statement WHILE '(' . expr ')' ';'   (rule 281)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 411
    identifier	go to state 151



state 389

    iteration_statement  ->  for '(' expr_opt ';' . expr_opt ';' expr_opt ')' statement   (rule 282)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    $default	reduce using rule 283 (expr_opt)

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 345
    expr_opt	go to state 412
    identifier	go to state 151



state 390

    parameter_type_list  ->  parameter_list ',' VAR_ARGS .   (rule 218)

    $default	reduce using rule 218 (parameter_type_list)



state 391

    parameter_list  ->  parameter_list ',' parameter_declaration .   (rule 220)

    $default	reduce using rule 220 (parameter_list)



state 392

    designator  ->  '[' constant_expr ']' .   (rule 124)

    $default	reduce using rule 124 (designator)



state 393

    initializer  ->  '{' initializer_list ',' '}' .   (rule 240)

    $default	reduce using rule 240 (initializer)



state 394

    initializer_list  ->  initializer_list ',' designation_opt . initializer   (rule 242)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    '{' 	shift, and go to state 208

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 209
    initializer	go to state 413
    identifier	go to state 151



state 395

    abstract_declarator2  ->  '(' parameter_type_list ')' .   (rule 234)

    $default	reduce using rule 234 (abstract_declarator2)



state 396

    abstract_declarator2  ->  '(' abstract_declarator ')' .   (rule 228)

    $default	reduce using rule 228 (abstract_declarator2)



state 397

    abstract_declarator2  ->  '[' constant_expr ']' .   (rule 230)

    $default	reduce using rule 230 (abstract_declarator2)



state 398

    abstract_declarator2  ->  abstract_declarator2 '(' ')' .   (rule 235)

    $default	reduce using rule 235 (abstract_declarator2)



state 399

    abstract_declarator2  ->  abstract_declarator2 '(' @9 . parameter_type_list ')'   (rule 237)

    TYPE_NAME	shift, and go to state 2
    CODE	shift, and go to state 8
    EEPROM	shift, and go to state 9
    SFR 	shift, and go to state 10
    SFR16	shift, and go to state 11
    SFR32	shift, and go to state 12
    SBIT	shift, and go to state 13
    XDATA	shift, and go to state 14
    DATA	shift, and go to state 15
    IDATA	shift, and go to state 16
    PDATA	shift, and go to state 17
    CHAR	shift, and go to state 18
    SHORT	shift, and go to state 19
    INT 	shift, and go to state 20
    LONG	shift, and go to state 21
    SIGNED	shift, and go to state 22
    UNSIGNED	shift, and go to state 23
    FLOAT	shift, and go to state 24
    FIXED16X16	shift, and go to state 25
    CONST	shift, and go to state 26
    VOLATILE	shift, and go to state 27
    VOID	shift, and go to state 28
    BIT 	shift, and go to state 29
    STRUCT	shift, and go to state 30
    UNION	shift, and go to state 31
    ENUM	shift, and go to state 32
    RESTRICT	shift, and go to state 34

    type_specifier	go to state 106
    type_specifier2	go to state 46
    sfr_reg_bit	go to state 47
    sfr_attributes	go to state 48
    struct_or_union_specifier	go to state 49
    struct_or_union	go to state 50
    enum_specifier	go to state 51
    type_specifier_list	go to state 281
    type_specifier_list_	go to state 109
    parameter_type_list	go to state 414
    parameter_list	go to state 283
    parameter_declaration	go to state 284
    type_name	go to state 285



state 400

    abstract_declarator2  ->  abstract_declarator2 '[' ']' .   (rule 231)

    $default	reduce using rule 231 (abstract_declarator2)



state 401

    abstract_declarator2  ->  abstract_declarator2 '[' constant_expr . ']'   (rule 232)

    ']' 	shift, and go to state 415



state 402

    argument_expr_list  ->  assignment_expr ',' argument_expr_list .   (rule 40)

    $default	reduce using rule 40 (argument_expr_list)



state 403

    conditional_expr  ->  logical_or_expr '?' @5 logical_or_expr ':' . conditional_expr   (rule 88)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 416
    identifier	go to state 151



state 404

    struct_declarator  ->  ':' constant_expr .   (rule 179)

    $default	reduce using rule 179 (struct_declarator)



state 405

    struct_declarator_list  ->  struct_declarator_list ',' . struct_declarator   (rule 177)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 35
    '*' 	shift, and go to state 36
    ':' 	shift, and go to state 380

    $default	reduce using rule 181 (struct_declarator)

    struct_declarator	go to state 417
    declarator	go to state 383
    declarator3	go to state 64
    declarator2_function_attributes	go to state 65
    declarator2	go to state 55
    function_declarator2	go to state 56
    pointer	go to state 66
    unqualified_pointer	go to state 58
    identifier	go to state 59



state 406

    struct_declaration  ->  type_specifier_list struct_declarator_list ';' .   (rule 175)

    $default	reduce using rule 175 (struct_declaration)



state 407

    struct_declarator  ->  declarator ':' . constant_expr   (rule 180)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 138
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 149
    constant_expr	go to state 418
    identifier	go to state 151



state 408

    selection_statement  ->  IF '(' expr ')' @11 . statement else_statement   (rule 273)

    error	shift, and go to state 82
    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    CRITICAL	shift, and go to state 156
    CASE	shift, and go to state 157
    DEFAULT	shift, and go to state 158
    IF  	shift, and go to state 159
    SWITCH	shift, and go to state 160
    WHILE	shift, and go to state 161
    DO  	shift, and go to state 162
    FOR 	shift, and go to state 163
    GOTO	shift, and go to state 164
    CONTINUE	shift, and go to state 165
    BREAK	shift, and go to state 166
    RETURN	shift, and go to state 167
    INLINEASM	shift, and go to state 168
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    ';' 	shift, and go to state 169
    '{' 	shift, and go to state 83

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 174
    statement	go to state 419
    critical	go to state 176
    critical_statement	go to state 177
    labeled_statement	go to state 178
    start_block	go to state 87
    compound_statement	go to state 180
    expression_statement	go to state 183
    selection_statement	go to state 184
    while	go to state 185
    do  	go to state 186
    for 	go to state 187
    iteration_statement	go to state 188
    jump_statement	go to state 189
    identifier	go to state 190



state 409

    selection_statement  ->  SWITCH '(' expr ')' @12 . statement   (rule 275)

    error	shift, and go to state 82
    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    CRITICAL	shift, and go to state 156
    CASE	shift, and go to state 157
    DEFAULT	shift, and go to state 158
    IF  	shift, and go to state 159
    SWITCH	shift, and go to state 160
    WHILE	shift, and go to state 161
    DO  	shift, and go to state 162
    FOR 	shift, and go to state 163
    GOTO	shift, and go to state 164
    CONTINUE	shift, and go to state 165
    BREAK	shift, and go to state 166
    RETURN	shift, and go to state 167
    INLINEASM	shift, and go to state 168
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    ';' 	shift, and go to state 169
    '{' 	shift, and go to state 83

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 174
    statement	go to state 420
    critical	go to state 176
    critical_statement	go to state 177
    labeled_statement	go to state 178
    start_block	go to state 87
    compound_statement	go to state 180
    expression_statement	go to state 183
    selection_statement	go to state 184
    while	go to state 185
    do  	go to state 186
    for 	go to state 187
    iteration_statement	go to state 188
    jump_statement	go to state 189
    identifier	go to state 190



state 410

    iteration_statement  ->  while '(' expr ')' @13 . statement   (rule 280)

    error	shift, and go to state 82
    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    CRITICAL	shift, and go to state 156
    CASE	shift, and go to state 157
    DEFAULT	shift, and go to state 158
    IF  	shift, and go to state 159
    SWITCH	shift, and go to state 160
    WHILE	shift, and go to state 161
    DO  	shift, and go to state 162
    FOR 	shift, and go to state 163
    GOTO	shift, and go to state 164
    CONTINUE	shift, and go to state 165
    BREAK	shift, and go to state 166
    RETURN	shift, and go to state 167
    INLINEASM	shift, and go to state 168
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    ';' 	shift, and go to state 169
    '{' 	shift, and go to state 83

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 174
    statement	go to state 421
    critical	go to state 176
    critical_statement	go to state 177
    labeled_statement	go to state 178
    start_block	go to state 87
    compound_statement	go to state 180
    expression_statement	go to state 183
    selection_statement	go to state 184
    while	go to state 185
    do  	go to state 186
    for 	go to state 187
    iteration_statement	go to state 188
    jump_statement	go to state 189
    identifier	go to state 190



state 411

    expr  ->  expr . ',' @6 assignment_expr   (rule 104)
    iteration_statement  ->  do statement WHILE '(' expr . ')' ';'   (rule 281)

    ')' 	shift, and go to state 422
    ',' 	shift, and go to state 270



state 412

    iteration_statement  ->  for '(' expr_opt ';' expr_opt . ';' expr_opt ')' statement   (rule 282)

    ';' 	shift, and go to state 423



state 413

    initializer_list  ->  initializer_list ',' designation_opt initializer .   (rule 242)

    $default	reduce using rule 242 (initializer_list)



state 414

    abstract_declarator2  ->  abstract_declarator2 '(' @9 parameter_type_list . ')'   (rule 237)

    ')' 	shift, and go to state 424



state 415

    abstract_declarator2  ->  abstract_declarator2 '[' constant_expr ']' .   (rule 232)

    $default	reduce using rule 232 (abstract_declarator2)



state 416

    conditional_expr  ->  logical_or_expr '?' @5 logical_or_expr ':' conditional_expr .   (rule 88)

    $default	reduce using rule 88 (conditional_expr)



state 417

    struct_declarator_list  ->  struct_declarator_list ',' struct_declarator .   (rule 177)

    $default	reduce using rule 177 (struct_declarator_list)



state 418

    struct_declarator  ->  declarator ':' constant_expr .   (rule 180)

    $default	reduce using rule 180 (struct_declarator)



state 419

    selection_statement  ->  IF '(' expr ')' @11 statement . else_statement   (rule 273)

    ELSE	shift, and go to state 425

    ELSE	[reduce using rule 271 (else_statement)]
    $default	reduce using rule 271 (else_statement)

    else_statement	go to state 426



state 420

    selection_statement  ->  SWITCH '(' expr ')' @12 statement .   (rule 275)

    $default	reduce using rule 275 (selection_statement)



state 421

    iteration_statement  ->  while '(' expr ')' @13 statement .   (rule 280)

    $default	reduce using rule 280 (iteration_statement)



state 422

    iteration_statement  ->  do statement WHILE '(' expr ')' . ';'   (rule 281)

    ';' 	shift, and go to state 427



state 423

    iteration_statement  ->  for '(' expr_opt ';' expr_opt ';' . expr_opt ')' statement   (rule 282)

    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132

    $default	reduce using rule 283 (expr_opt)

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 345
    expr_opt	go to state 428
    identifier	go to state 151



state 424

    abstract_declarator2  ->  abstract_declarator2 '(' @9 parameter_type_list ')' .   (rule 237)

    $default	reduce using rule 237 (abstract_declarator2)



state 425

    else_statement  ->  ELSE . statement   (rule 270)

    error	shift, and go to state 82
    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    CRITICAL	shift, and go to state 156
    CASE	shift, and go to state 157
    DEFAULT	shift, and go to state 158
    IF  	shift, and go to state 159
    SWITCH	shift, and go to state 160
    WHILE	shift, and go to state 161
    DO  	shift, and go to state 162
    FOR 	shift, and go to state 163
    GOTO	shift, and go to state 164
    CONTINUE	shift, and go to state 165
    BREAK	shift, and go to state 166
    RETURN	shift, and go to state 167
    INLINEASM	shift, and go to state 168
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    ';' 	shift, and go to state 169
    '{' 	shift, and go to state 83

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 174
    statement	go to state 429
    critical	go to state 176
    critical_statement	go to state 177
    labeled_statement	go to state 178
    start_block	go to state 87
    compound_statement	go to state 180
    expression_statement	go to state 183
    selection_statement	go to state 184
    while	go to state 185
    do  	go to state 186
    for 	go to state 187
    iteration_statement	go to state 188
    jump_statement	go to state 189
    identifier	go to state 190



state 426

    selection_statement  ->  IF '(' expr ')' @11 statement else_statement .   (rule 273)

    $default	reduce using rule 273 (selection_statement)



state 427

    iteration_statement  ->  do statement WHILE '(' expr ')' ';' .   (rule 281)

    $default	reduce using rule 281 (iteration_statement)



state 428

    iteration_statement  ->  for '(' expr_opt ';' expr_opt ';' expr_opt . ')' statement   (rule 282)

    ')' 	shift, and go to state 430



state 429

    else_statement  ->  ELSE statement .   (rule 270)

    $default	reduce using rule 270 (else_statement)



state 430

    iteration_statement  ->  for '(' expr_opt ';' expr_opt ';' expr_opt ')' . statement   (rule 282)

    error	shift, and go to state 82
    IDENTIFIER	shift, and go to state 1
    CONSTANT	shift, and go to state 120
    STRING_LITERAL	shift, and go to state 121
    SIZEOF	shift, and go to state 122
    TYPEOF	shift, and go to state 123
    INC_OP	shift, and go to state 124
    DEC_OP	shift, and go to state 125
    CRITICAL	shift, and go to state 156
    CASE	shift, and go to state 157
    DEFAULT	shift, and go to state 158
    IF  	shift, and go to state 159
    SWITCH	shift, and go to state 160
    WHILE	shift, and go to state 161
    DO  	shift, and go to state 162
    FOR 	shift, and go to state 163
    GOTO	shift, and go to state 164
    CONTINUE	shift, and go to state 165
    BREAK	shift, and go to state 166
    RETURN	shift, and go to state 167
    INLINEASM	shift, and go to state 168
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 127
    '*' 	shift, and go to state 128
    '+' 	shift, and go to state 129
    '-' 	shift, and go to state 130
    '~' 	shift, and go to state 131
    '!' 	shift, and go to state 132
    ';' 	shift, and go to state 169
    '{' 	shift, and go to state 83

    primary_expr	go to state 133
    string_literal	go to state 134
    postfix_expr	go to state 135
    unary_expr	go to state 136
    unary_operator	go to state 137
    cast_expr	go to state 171
    multiplicative_expr	go to state 139
    additive_expr	go to state 140
    shift_expr	go to state 141
    relational_expr	go to state 142
    equality_expr	go to state 143
    and_expr	go to state 144
    exclusive_or_expr	go to state 145
    inclusive_or_expr	go to state 146
    logical_and_expr	go to state 147
    logical_or_expr	go to state 148
    conditional_expr	go to state 172
    assignment_expr	go to state 173
    expr	go to state 174
    statement	go to state 431
    critical	go to state 176
    critical_statement	go to state 177
    labeled_statement	go to state 178
    start_block	go to state 87
    compound_statement	go to state 180
    expression_statement	go to state 183
    selection_statement	go to state 184
    while	go to state 185
    do  	go to state 186
    for 	go to state 187
    iteration_statement	go to state 188
    jump_statement	go to state 189
    identifier	go to state 190



state 431

    iteration_statement  ->  for '(' expr_opt ';' expr_opt ';' expr_opt ')' statement .   (rule 282)

    $default	reduce using rule 282 (iteration_statement)



state 432

    $   	go to state 433



state 433

    $   	go to state 434



state 434

    $default	accept
