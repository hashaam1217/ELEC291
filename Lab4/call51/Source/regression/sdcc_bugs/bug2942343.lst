0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Dec 11 2012) (MSVC)
0000              4   ; This file was generated Thu Dec 13 16:02:35 2012
0000              5   ;--------------------------------------------------------
                  5   $name bug2942343
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_ISEG    segment idata
0000             13            R_OSEG    segment data overlay
0000             14            BIT_BANK  segment data overlay
0000             15            R_HOME    segment code
0000             16            R_GSINIT  segment code
0000             17            R_IXSEG   segment xdata
0000             18            R_CONST   segment code
0000             19            R_XINIT   segment code
0000             20            R_DINIT   segment code
0000             21   
0000             22   ;--------------------------------------------------------
0000             23   ; Public variables in this module
0000             24   ;--------------------------------------------------------
0000             25            public _foo
0000             26            public _x
0000             27            public _testBug
0000             28            public _main
0000             29            public __c51_external_startup
0000             30            public _bar
0000             31            public _y
0000             32            public ___fail_PARM_4
0000             33            public ___fail_PARM_3
0000             34            public ___fail_PARM_2
0000             35            public ___numFailures
0000             36            public ___numTests
0000             37            public ___prints
0000             38            public ___printn
0000             39            public ___printf
0000             40            public ___fail
0000             41   ;--------------------------------------------------------
0000             42   ; Special Function Registers
0000             43   ;--------------------------------------------------------
0000             44   _ACC            DATA 0xe0
0000             45   _B              DATA 0xf0
0000             46   _DPH            DATA 0x83
0000             47   _DP0H           DATA 0x83
0000             48   _DPL            DATA 0x82
0000             49   _DP0L           DATA 0x82
0000             50   _IE             DATA 0xa8
0000             51   _IP             DATA 0xb8
0000             52   _P0             DATA 0x80
0000             53   _P1             DATA 0x90
0000             54   _P2             DATA 0xa0
0000             55   _P3             DATA 0xb0
0000             56   _PCON           DATA 0x87
0000             57   _PSW            DATA 0xd0
0000             58   _SBUF           DATA 0x99
0000             59   _SBUF0          DATA 0x99
0000             60   _SCON           DATA 0x98
0000             61   _SP             DATA 0x81
0000             62   _TCON           DATA 0x88
0000             63   _TH0            DATA 0x8c
0000             64   _TH1            DATA 0x8d
0000             65   _TL0            DATA 0x8a
0000             66   _TL1            DATA 0x8b
0000             67   _TMOD           DATA 0x89
0000             68   _PSBANK         DATA 0x90
0000             69   ;--------------------------------------------------------
0000             70   ; special function bits
0000             71   ;--------------------------------------------------------
0000             72   _BREG_F0        BIT 0xf0
0000             73   _BREG_F1        BIT 0xf1
0000             74   _BREG_F2        BIT 0xf2
0000             75   _BREG_F3        BIT 0xf3
0000             76   _BREG_F4        BIT 0xf4
0000             77   _BREG_F5        BIT 0xf5
0000             78   _BREG_F6        BIT 0xf6
0000             79   _BREG_F7        BIT 0xf7
0000             80   _EX0            BIT 0xa8
0000             81   _ET0            BIT 0xa9
0000             82   _EX1            BIT 0xaa
0000             83   _ET1            BIT 0xab
0000             84   _ES             BIT 0xac
0000             85   _EA             BIT 0xaf
0000             86   _PX0            BIT 0xb8
0000             87   _PT0            BIT 0xb9
0000             88   _PX1            BIT 0xba
0000             89   _PT1            BIT 0xbb
0000             90   _PS             BIT 0xbc
0000             91   _P0_0           BIT 0x80
0000             92   _P0_1           BIT 0x81
0000             93   _P0_2           BIT 0x82
0000             94   _P0_3           BIT 0x83
0000             95   _P0_4           BIT 0x84
0000             96   _P0_5           BIT 0x85
0000             97   _P0_6           BIT 0x86
0000             98   _P0_7           BIT 0x87
0000             99   _P1_0           BIT 0x90
0000            100   _P1_1           BIT 0x91
0000            101   _P1_2           BIT 0x92
0000            102   _P1_3           BIT 0x93
0000            103   _P1_4           BIT 0x94
0000            104   _P1_5           BIT 0x95
0000            105   _P1_6           BIT 0x96
0000            106   _P1_7           BIT 0x97
0000            107   _P2_0           BIT 0xa0
0000            108   _P2_1           BIT 0xa1
0000            109   _P2_2           BIT 0xa2
0000            110   _P2_3           BIT 0xa3
0000            111   _P2_4           BIT 0xa4
0000            112   _P2_5           BIT 0xa5
0000            113   _P2_6           BIT 0xa6
0000            114   _P2_7           BIT 0xa7
0000            115   _P3_0           BIT 0xb0
0000            116   _P3_1           BIT 0xb1
0000            117   _P3_2           BIT 0xb2
0000            118   _P3_3           BIT 0xb3
0000            119   _P3_4           BIT 0xb4
0000            120   _P3_5           BIT 0xb5
0000            121   _P3_6           BIT 0xb6
0000            122   _P3_7           BIT 0xb7
0000            123   _RXD            BIT 0xb0
0000            124   _RXD0           BIT 0xb0
0000            125   _TXD            BIT 0xb1
0000            126   _TXD0           BIT 0xb1
0000            127   _INT0           BIT 0xb2
0000            128   _INT1           BIT 0xb3
0000            129   _T0             BIT 0xb4
0000            130   _T1             BIT 0xb5
0000            131   _WR             BIT 0xb6
0000            132   _RD             BIT 0xb7
0000            133   _P              BIT 0xd0
0000            134   _F1             BIT 0xd1
0000            135   _OV             BIT 0xd2
0000            136   _RS0            BIT 0xd3
0000            137   _RS1            BIT 0xd4
0000            138   _F0             BIT 0xd5
0000            139   _AC             BIT 0xd6
0000            140   _CY             BIT 0xd7
0000            141   _RI             BIT 0x98
0000            142   _TI             BIT 0x99
0000            143   _RB8            BIT 0x9a
0000            144   _TB8            BIT 0x9b
0000            145   _REN            BIT 0x9c
0000            146   _SM2            BIT 0x9d
0000            147   _SM1            BIT 0x9e
0000            148   _SM0            BIT 0x9f
0000            149   _IT0            BIT 0x88
0000            150   _IE0            BIT 0x89
0000            151   _IT1            BIT 0x8a
0000            152   _IE1            BIT 0x8b
0000            153   _TR0            BIT 0x8c
0000            154   _TF0            BIT 0x8d
0000            155   _TR1            BIT 0x8e
0000            156   _TF1            BIT 0x8f
0000            157   ;--------------------------------------------------------
0000            158   ; overlayable register banks
0000            159   ;--------------------------------------------------------
0000            160            rbank0 segment data overlay
0000            161   ;--------------------------------------------------------
0000            162   ; internal ram data
0000            163   ;--------------------------------------------------------
0000            164            rseg R_DSEG
0000            165   ___numTests:
0000            166            ds 2
0002            167   ___numFailures:
0002            168            ds 2
0004            169   ___fail_PARM_2:
0004            170            ds 2
0006            171   ___fail_PARM_3:
0006            172            ds 2
0008            173   ___fail_PARM_4:
0008            174            ds 2
000A            175   ___fail_sloc0_1_0:
000A            176            ds 3
000D            177   _y:
000D            178            ds 3
0010            179   _bar:
0010            180            ds 4
0014            181   ;--------------------------------------------------------
0014            182   ; overlayable items in internal ram 
0014            183   ;--------------------------------------------------------
0000            184            rseg R_OSEG
0000            185   ;--------------------------------------------------------
0000            186   ; indirectly addressable internal ram data
0000            187   ;--------------------------------------------------------
0000            188            rseg R_ISEG
0000            189   ___printn_buf_2_54:
0000            190            ds 6
0006            191   ;--------------------------------------------------------
0006            192   ; absolute internal ram data
0006            193   ;--------------------------------------------------------
0000            194            DSEG
0000            195   ;--------------------------------------------------------
0000            196   ; bit data
0000            197   ;--------------------------------------------------------
0000            198            rseg R_BSEG
0000            199   ;--------------------------------------------------------
0000            200   ; paged external ram data
0000            201   ;--------------------------------------------------------
0000            202            rseg R_XSEG
0000            203   ;--------------------------------------------------------
0000            204   ; external ram data
0000            205   ;--------------------------------------------------------
0000            206            rseg R_XSEG
0000            207   ;--------------------------------------------------------
0000            208   ; absolute external ram data
0000            209   ;--------------------------------------------------------
0000            210            XSEG
0000            211   ;--------------------------------------------------------
0000            212   ; external initialized ram data
0000            213   ;--------------------------------------------------------
0000            214            rseg R_IXSEG
0000            215            rseg R_HOME
0000            216            rseg R_GSINIT
0000            217            rseg R_CSEG
0000            218   ;--------------------------------------------------------
0000            219   ; Reset entry point and interrupt vectors
0000            220   ;--------------------------------------------------------
0000            221            CSEG at 0x0000
0000 020100     222            ljmp    _crt0
0003            223   ;--------------------------------------------------------
0003            224   ; global & static initialisations
0003            225   ;--------------------------------------------------------
0000            226            rseg R_HOME
0000            227            rseg R_GSINIT
0000            228            rseg R_GSINIT
0000            229   ;--------------------------------------------------------
0000            230   ; data variables initialization
0000            231   ;--------------------------------------------------------
0000            232            rseg R_DINIT
0000            233   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:20: int __numTests = 0;
0000 E4         234            clr     a
0001 F5C0       235            mov     ___numTests,a
0003 F5C1       236            mov     (___numTests + 1),a
0005            237   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:22: int __numFailures = 0;
0005 E4         238            clr     a
0006 F580       239            mov     ___numFailures,a
0008 F581       240            mov     (___numFailures + 1),a
000A            241   ;        C:\Source\call51\Source\regression\sdcc_bugs\bug2942343.c:9: unsigned char y[3] = {255, 256, 257}; //does not.
000A 7580FF     242            mov     _y,#0xFF
000D 758100     243            mov     (_y + 0x0001),#0x00
0010 758201     244            mov     (_y + 0x0002),#0x01
0013            245   ;        C:\Source\call51\Source\regression\sdcc_bugs\bug2942343.c:12: _Bool bar[4] = {1, 2, 3, 4};          //creates an array with true in foo[0], but 2,3,4 in the rest.
0013 754001     246            mov     _bar,#0x01
0016 754102     247            mov     (_bar + 0x0001),#0x02
0019 754203     248            mov     (_bar + 0x0002),#0x03
001C 754304     249            mov     (_bar + 0x0003),#0x04
001F            250            ; The linker places a 'ret' at the end of segment R_DINIT.
001F            251   ;--------------------------------------------------------
001F            252   ; code
001F            253   ;--------------------------------------------------------
0000            254            rseg R_CSEG
0000            255   ;------------------------------------------------------------
0000            256   ;Allocation info for local variables in function '__prints'
0000            257   ;------------------------------------------------------------
0000            258   ;s                         Allocated to registers r2 r3 r4 
0000            259   ;c                         Allocated to registers r6 
0000            260   ;------------------------------------------------------------
0000            261   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:110: __prints (const char *s)
0000            262   ;        -----------------------------------------
0000            263   ;         function __prints
0000            264   ;        -----------------------------------------
0000            265   ___prints:
0000            266            using   0
0000 AA82       267            mov     r2,dpl
0002 AB83       268            mov     r3,dph
0004 ACF0       269            mov     r4,b
0006            270   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:114: while ('\0' != (c = *s))
0006            271   L002001?:
0006 8A82       272            mov     dpl,r2
0008 8B83       273            mov     dph,r3
000A 8CF0       274            mov     b,r4
000C 120100     275            lcall   __gptrget
000F FD         276            mov     r5,a
0010 FE         277            mov     r6,a
0011 BD0008     278            cjne    r5,#0x00,L002009?
0014 22         279            ret
0015            280   L002009?:
0015            281   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:116: putchar(c);
0015 8E82       282            mov     dpl,r6
0017 C002       283            push    ar2
0019 C003       284            push    ar3
001B C004       285            push    ar4
001D 120100     286            lcall   _putchar
0020 D004       287            pop     ar4
0022 D003       288            pop     ar3
0024 D002       289            pop     ar2
0026            290   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:117: ++s;
0026 0A         291            inc     r2
0027 BA0088     292            cjne    r2,#0x00,L002001?
002A 0B         293            inc     r3
002B 8001       294            sjmp    L002001?
002D            295   ;------------------------------------------------------------
002D            296   ;Allocation info for local variables in function '__printn'
002D            297   ;------------------------------------------------------------
002D            298   ;n                         Allocated to registers r2 r3 
002D            299   ;p                         Allocated to registers r4 
002D            300   ;neg                       Allocated to registers r5 
002D            301   ;buf                       Allocated with name '___printn_buf_2_54'
002D            302   ;------------------------------------------------------------
002D            303   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:122: __printn (int n)
002D            304   ;        -----------------------------------------
002D            305   ;         function __printn
002D            306   ;        -----------------------------------------
002D            307   ___printn:
002D AA82       308            mov     r2,dpl
002F AB83       309            mov     r3,dph
0031            310   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:124: if (0 == n)
0031 BA0088     311            cjne    r2,#0x00,L003009?
0034 BB0088     312            cjne    r3,#0x00,L003009?
0037            313   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:126: putchar('0');
0037 758230     314            mov     dpl,#0x30
003A 020100     315            ljmp    _putchar
003D            316   L003009?:
003D            317   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:131: char MEMSPACE_BUF *p = &buf[sizeof (buf) - 1];
003D 7C4D       318            mov     r4,#(___printn_buf_2_54 + 0x0005)
003F            319   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:132: char neg = 0;
003F 7D00       320            mov     r5,#0x00
0041            321   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:134: buf[sizeof(buf) - 1] = '\0';
0041 784D       322            mov     r0,#(___printn_buf_2_54 + 0x0005)
0043 7600       323            mov     @r0,#0x00
0045            324   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:136: if (0 > n)
0045 EB         325            mov     a,r3
0046 30E708     326            jnb     acc.7,L003016?
0049            327   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:138: n = -n;
0049 C3         328            clr     c
004A E4         329            clr     a
004B 9A         330            subb    a,r2
004C FA         331            mov     r2,a
004D E4         332            clr     a
004E 9B         333            subb    a,r3
004F FB         334            mov     r3,a
0050            335   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:139: neg = 1;
0050 7D01       336            mov     r5,#0x01
0052            337   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:142: while (0 != n)
0052            338   L003016?:
0052 8C00       339            mov     ar0,r4
0054            340   L003003?:
0054 BA0088     341            cjne    r2,#0x00,L003022?
0057 BB0088     342            cjne    r3,#0x00,L003022?
005A 8001       343            sjmp    L003018?
005C            344   L003022?:
005C            345   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:144: *--p = '0' + __mod (n, 10);
005C 18         346            dec     r0
005D 75000A     347            mov     __modsint_PARM_2,#0x0A
0060 E4         348            clr     a
0061 F501       349            mov     (__modsint_PARM_2 + 1),a
0063 8A82       350            mov     dpl,r2
0065 8B83       351            mov     dph,r3
0067 C002       352            push    ar2
0069 C003       353            push    ar3
006B C005       354            push    ar5
006D C000       355            push    ar0
006F 120100     356            lcall   __modsint
0072 AE82       357            mov     r6,dpl
0074 D000       358            pop     ar0
0076 D005       359            pop     ar5
0078 D003       360            pop     ar3
007A D002       361            pop     ar2
007C 7430       362            mov     a,#0x30
007E 2E         363            add     a,r6
007F F6         364            mov     @r0,a
0080            365   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:145: n = __div (n, 10);
0080 75000A     366            mov     __divsint_PARM_2,#0x0A
0083 E4         367            clr     a
0084 F501       368            mov     (__divsint_PARM_2 + 1),a
0086 8A82       369            mov     dpl,r2
0088 8B83       370            mov     dph,r3
008A C005       371            push    ar5
008C C000       372            push    ar0
008E 120100     373            lcall   __divsint
0091 AA82       374            mov     r2,dpl
0093 AB83       375            mov     r3,dph
0095 D000       376            pop     ar0
0097 D005       377            pop     ar5
0099 8001       378            sjmp    L003003?
009B            379   L003018?:
009B 8804       380            mov     ar4,r0
009D            381   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:148: if (neg)
009D ED         382            mov     a,r5
009E 6001       383            jz      L003007?
00A0            384   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:149: putchar('-');
00A0 75822D     385            mov     dpl,#0x2D
00A3 C004       386            push    ar4
00A5 120100     387            lcall   _putchar
00A8 D004       388            pop     ar4
00AA            389   L003007?:
00AA            390   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:151: __prints(p);
00AA 7A00       391            mov     r2,#0x00
00AC 7B40       392            mov     r3,#0x40
00AE 8C82       393            mov     dpl,r4
00B0 8A83       394            mov     dph,r2
00B2 8BF0       395            mov     b,r3
00B4 020100     396            ljmp    ___prints
00B7            397   ;------------------------------------------------------------
00B7            398   ;Allocation info for local variables in function '_c51_external_startup'
00B7            399   ;------------------------------------------------------------
00B7            400   ;------------------------------------------------------------
00B7            401   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:159: _c51_external_startup (void)
00B7            402   ;        -----------------------------------------
00B7            403   ;         function _c51_external_startup
00B7            404   ;        -----------------------------------------
00B7            405   __c51_external_startup:
00B7            406   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:163: TI = 1;
00B7 D299       407            setb    _TI
00B9            408   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:164: return 0;
00B9 758200     409            mov     dpl,#0x00
00BC 22         410            ret
00BD            411   ;------------------------------------------------------------
00BD            412   ;Allocation info for local variables in function '__printf'
00BD            413   ;------------------------------------------------------------
00BD            414   ;szFormat                  Allocated to stack - offset -5
00BD            415   ;ap                        Allocated to registers r2 
00BD            416   ;sz                        Allocated to registers r3 r4 r5 
00BD            417   ;i                         Allocated to registers r3 r4 
00BD            418   ;------------------------------------------------------------
00BD            419   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:170: __printf (const char *szFormat, ...)
00BD            420   ;        -----------------------------------------
00BD            421   ;         function __printf
00BD            422   ;        -----------------------------------------
00BD            423   ___printf:
00BD C000       424            push    _bp
00BF 858100     425            mov     _bp,sp
00C2            426   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:173: va_start (ap, szFormat);
00C2 E500       427            mov     a,_bp
00C4 24FB       428            add     a,#0xfb
00C6 FA         429            mov     r2,a
00C7            430   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:175: while (*szFormat)
00C7            431   L005009?:
00C7 E500       432            mov     a,_bp
00C9 24FB       433            add     a,#0xfb
00CB F8         434            mov     r0,a
00CC 8603       435            mov     ar3,@r0
00CE 08         436            inc     r0
00CF 8604       437            mov     ar4,@r0
00D1 08         438            inc     r0
00D2 8605       439            mov     ar5,@r0
00D4 8B82       440            mov     dpl,r3
00D6 8C83       441            mov     dph,r4
00D8 8DF0       442            mov     b,r5
00DA 120100     443            lcall   __gptrget
00DD FE         444            mov     r6,a
00DE 7001       445            jnz     L005020?
00E0 020100     446            ljmp    L005012?
00E3            447   L005020?:
00E3            448   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:177: if (*szFormat == '%')
00E3 BE25A8     449            cjne    r6,#0x25,L005021?
00E6 8001       450            sjmp    L005022?
00E8            451   L005021?:
00E8 020100     452            ljmp    L005007?
00EB            453   L005022?:
00EB            454   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:179: switch (*++szFormat)
00EB E500       455            mov     a,_bp
00ED 24FB       456            add     a,#0xfb
00EF F8         457            mov     r0,a
00F0 7401       458            mov     a,#0x01
00F2 2B         459            add     a,r3
00F3 F6         460            mov     @r0,a
00F4 E4         461            clr     a
00F5 3C         462            addc    a,r4
00F6 08         463            inc     r0
00F7 F6         464            mov     @r0,a
00F8 08         465            inc     r0
00F9 A605       466            mov     @r0,ar5
00FB E500       467            mov     a,_bp
00FD 24FB       468            add     a,#0xfb
00FF F8         469            mov     r0,a
0100 8603       470            mov     ar3,@r0
0102 08         471            inc     r0
0103 8604       472            mov     ar4,@r0
0105 08         473            inc     r0
0106 8605       474            mov     ar5,@r0
0108 8B82       475            mov     dpl,r3
010A 8C83       476            mov     dph,r4
010C 8DF0       477            mov     b,r5
010E 120100     478            lcall   __gptrget
0111 FB         479            mov     r3,a
0112 BB2568     480            cjne    r3,#0x25,L005023?
0115 8001       481            sjmp    L005003?
0117            482   L005023?:
0117 BB73E8     483            cjne    r3,#0x73,L005024?
011A 8001       484            sjmp    L005001?
011C            485   L005024?:
011C            486   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:181: case 's':
011C BB7568     487            cjne    r3,#0x75,L005008?
011F 8001       488            sjmp    L005002?
0121            489   L005001?:
0121            490   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:183: char *sz = va_arg (ap, char *);
0121 EA         491            mov     a,r2
0122 24FD       492            add     a,#0xfd
0124 F8         493            mov     r0,a
0125 FA         494            mov     r2,a
0126 8603       495            mov     ar3,@r0
0128 08         496            inc     r0
0129 8604       497            mov     ar4,@r0
012B 08         498            inc     r0
012C 8605       499            mov     ar5,@r0
012E 18         500            dec     r0
012F 18         501            dec     r0
0130            502   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:184: __prints(sz);
0130 8B82       503            mov     dpl,r3
0132 8C83       504            mov     dph,r4
0134 8DF0       505            mov     b,r5
0136 C002       506            push    ar2
0138 120100     507            lcall   ___prints
013B D002       508            pop     ar2
013D            509   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:185: break;
013D            510   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:188: case 'u':
013D 8001       511            sjmp    L005008?
013F            512   L005002?:
013F            513   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:190: int i = va_arg (ap, int);
013F EA         514            mov     a,r2
0140 24FE       515            add     a,#0xfe
0142 F8         516            mov     r0,a
0143 FA         517            mov     r2,a
0144 8603       518            mov     ar3,@r0
0146 08         519            inc     r0
0147 8604       520            mov     ar4,@r0
0149 18         521            dec     r0
014A            522   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:191: __printn (i);
014A 8B82       523            mov     dpl,r3
014C 8C83       524            mov     dph,r4
014E C002       525            push    ar2
0150 120100     526            lcall   ___printn
0153 D002       527            pop     ar2
0155            528   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:192: break;
0155            529   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:195: case '%':
0155 8001       530            sjmp    L005008?
0157            531   L005003?:
0157            532   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:196: putchar ('%');
0157 758225     533            mov     dpl,#0x25
015A C002       534            push    ar2
015C 120100     535            lcall   _putchar
015F D002       536            pop     ar2
0161            537   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:197: break;
0161            538   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:201: }
0161 8001       539            sjmp    L005008?
0163            540   L005007?:
0163            541   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:205: putchar (*szFormat);
0163 8E82       542            mov     dpl,r6
0165 C002       543            push    ar2
0167 120100     544            lcall   _putchar
016A D002       545            pop     ar2
016C            546   L005008?:
016C            547   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:207: szFormat++;
016C E500       548            mov     a,_bp
016E 24FB       549            add     a,#0xfb
0170 F8         550            mov     r0,a
0171 06         551            inc     @r0
0172 B600E8     552            cjne    @r0,#0x00,L005026?
0175 08         553            inc     r0
0176 06         554            inc     @r0
0177            555   L005026?:
0177 020100     556            ljmp    L005009?
017A            557   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:209: va_end (ap);
017A            558   L005012?:
017A D000       559            pop     _bp
017C 22         560            ret
017D            561   ;------------------------------------------------------------
017D            562   ;Allocation info for local variables in function '__fail'
017D            563   ;------------------------------------------------------------
017D            564   ;szCond                    Allocated with name '___fail_PARM_2'
017D            565   ;szFile                    Allocated with name '___fail_PARM_3'
017D            566   ;line                      Allocated with name '___fail_PARM_4'
017D            567   ;szMsg                     Allocated to registers r2 r3 
017D            568   ;sloc0                     Allocated with name '___fail_sloc0_1_0'
017D            569   ;------------------------------------------------------------
017D            570   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:213: __fail (code const char *szMsg, code const char *szCond, code const char *szFile, int line)
017D            571   ;        -----------------------------------------
017D            572   ;         function __fail
017D            573   ;        -----------------------------------------
017D            574   ___fail:
017D AA82       575            mov     r2,dpl
017F AB83       576            mov     r3,dph
0181            577   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:215: __printf("--- FAIL: \"%s\" on %s at %s:%u\n", szMsg, szCond, szFile, line);
0181 AC00       578            mov     r4,___fail_PARM_3
0183 AD01       579            mov     r5,(___fail_PARM_3 + 1)
0185 7E80       580            mov     r6,#0x80
0187 8540F8     581            mov     ___fail_sloc0_1_0,___fail_PARM_2
018A 8541F9     582            mov     (___fail_sloc0_1_0 + 1),(___fail_PARM_2 + 1)
018D 75FA80     583            mov     (___fail_sloc0_1_0 + 2),#0x80
0190 7F80       584            mov     r7,#0x80
0192 C0C0       585            push    ___fail_PARM_4
0194 C0C1       586            push    (___fail_PARM_4 + 1)
0196 C004       587            push    ar4
0198 C005       588            push    ar5
019A C006       589            push    ar6
019C C0F8       590            push    ___fail_sloc0_1_0
019E C0F9       591            push    (___fail_sloc0_1_0 + 1)
01A0 C0FA       592            push    (___fail_sloc0_1_0 + 2)
01A2 C002       593            push    ar2
01A4 C003       594            push    ar3
01A6 C007       595            push    ar7
01A8 7428       596            mov     a,#__str_0
01AA C0E0       597            push    acc
01AC 746D       598            mov     a,#(__str_0 >> 8)
01AE C0E0       599            push    acc
01B0 7480       600            mov     a,#0x80
01B2 C0E0       601            push    acc
01B4 120100     602            lcall   ___printf
01B7 E581       603            mov     a,sp
01B9 24F2       604            add     a,#0xf2
01BB F581       605            mov     sp,a
01BD            606   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:216: __numFailures++;
01BD 0580       607            inc     ___numFailures
01BF E4         608            clr     a
01C0 B58068     609            cjne    a,___numFailures,L006003?
01C3 0581       610            inc     (___numFailures + 1)
01C5            611   L006003?:
01C5 22         612            ret
01C6            613   ;------------------------------------------------------------
01C6            614   ;Allocation info for local variables in function 'main'
01C6            615   ;------------------------------------------------------------
01C6            616   ;------------------------------------------------------------
01C6            617   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:220: main (void)
01C6            618   ;        -----------------------------------------
01C6            619   ;         function main
01C6            620   ;        -----------------------------------------
01C6            621   _main:
01C6            622   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:222: __printf("--- Running: %s\n", __getSuiteName());
01C6 120100     623            lcall   ___getSuiteName
01C9 AA82       624            mov     r2,dpl
01CB AB83       625            mov     r3,dph
01CD 7C80       626            mov     r4,#0x80
01CF C002       627            push    ar2
01D1 C003       628            push    ar3
01D3 C004       629            push    ar4
01D5 74E8       630            mov     a,#__str_1
01D7 C0E0       631            push    acc
01D9 746D       632            mov     a,#(__str_1 >> 8)
01DB C0E0       633            push    acc
01DD 7480       634            mov     a,#0x80
01DF C0E0       635            push    acc
01E1 120100     636            lcall   ___printf
01E4 E581       637            mov     a,sp
01E6 24FA       638            add     a,#0xfa
01E8 F581       639            mov     sp,a
01EA            640   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:224: __runSuite();
01EA 120100     641            lcall   ___runSuite
01ED            642   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:228: __numFailures, __numTests, __numCases
01ED 900000     643            mov     dptr,#___numCases
01F0 E4         644            clr     a
01F1 93         645            movc    a,@a+dptr
01F2 FA         646            mov     r2,a
01F3 7401       647            mov     a,#0x01
01F5 93         648            movc    a,@a+dptr
01F6 FB         649            mov     r3,a
01F7            650   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:226: __printf("--- Summary: %u/%u/%u: %u failed of %u tests in %u cases.\n",
01F7 C002       651            push    ar2
01F9 C003       652            push    ar3
01FB C0C0       653            push    ___numTests
01FD C0C1       654            push    (___numTests + 1)
01FF C080       655            push    ___numFailures
0201 C081       656            push    (___numFailures + 1)
0203 C002       657            push    ar2
0205 C003       658            push    ar3
0207 C0C0       659            push    ___numTests
0209 C0C1       660            push    (___numTests + 1)
020B C080       661            push    ___numFailures
020D C081       662            push    (___numFailures + 1)
020F 74A8       663            mov     a,#__str_2
0211 C0E0       664            push    acc
0213 746E       665            mov     a,#(__str_2 >> 8)
0215 C0E0       666            push    acc
0217 7480       667            mov     a,#0x80
0219 C0E0       668            push    acc
021B 120100     669            lcall   ___printf
021E E581       670            mov     a,sp
0220 24F1       671            add     a,#0xf1
0222 F581       672            mov     sp,a
0224            673   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:231: IE=0;
0224 75A800     674            mov     _IE,#0x00
0227            675   ;        C:\Source\call51\Source\regression\sdcc_bugs\/../fwk/include/testfwk.h:232: return 0;
0227 900000     676            mov     dptr,#0x0000
022A 22         677            ret
022B            678   ;------------------------------------------------------------
022B            679   ;Allocation info for local variables in function 'testBug'
022B            680   ;------------------------------------------------------------
022B            681   ;------------------------------------------------------------
022B            682   ;        C:\Source\call51\Source\regression\sdcc_bugs\bug2942343.c:14: void testBug(void)
022B            683   ;        -----------------------------------------
022B            684   ;         function testBug
022B            685   ;        -----------------------------------------
022B            686   _testBug:
022B            687   ;        C:\Source\call51\Source\regression\sdcc_bugs\bug2942343.c:22: }
022B 22         688            ret
022C            689            rseg R_CSEG
022C            690   
0000            691            rseg R_CONST
0000            692   __str_0:
0000 2D2D2D20   693            db '--- FAIL: '
     4641494C
     3A20
000A 22         694            db 0x22
000B 2573       695            db '%s'
000D 22         696            db 0x22
000E 206F6E20   697            db ' on %s at %s:%u'
     25732061
     74202573
     3A2575
001D 0A         698            db 0x0A
001E 00         699            db 0x00
001F            700   __str_1:
001F 2D2D2D20   701            db '--- Running: %s'
     52756E6E
     696E673A
     202573
002E 0A         702            db 0x0A
002F 00         703            db 0x00
0030            704   __str_2:
0030 2D2D2D20   705            db '--- Summary: %u/%u/%u: %u failed of %u tests in %u cases.'
     53756D6D
     6172793A
     2025752F
     25752F25
     753A2025
     75206661
     696C6564
     206F6620
     25752074
     65737473
     20696E20
     25752063
     61736573
     2E
0069 0A         706            db 0x0A
006A 00         707            db 0x00
006B            708   _x:
006B FF         709            db 0xff         ; 255
006C 00         710            db 0x00         ; 0
006D 01         711            db 0x01         ; 1
006E            712   _foo:
006E 01         713            db 0x01         ;  1
006F 02         714            db 0x02         ;  2
0070 03         715            db 0x03         ;  3
0071 04         716            db 0x04         ;  4
0072            717   
0000            718            rseg R_XINIT
0000            719   
0003            720            CSEG
0003            721   
0003            722   end
